{"version":3,"sources":["components/CardItem.js","components/Cards.js","components/HeroSection.js","components/Footer.js","components/pages/Home.js","components/pages/Bisection Method.js","components/pages/False_position.js","components/pages/Newton-raphson.js","components/pages/Onepoint.js","components/pages/Secant.js","components/pages/Cramer.js","components/pages/Gauss.js","components/pages/Jordan.js","components/pages/LU.js","components/pages/Jacobi.js","components/pages/Seidel.js","components/pages/Gradient.js","components/pages/Newton.js","components/pages/Lagrange.js","components/pages/Spline.js","components/pages/Linear.js","components/pages/Polynomial.js","components/pages/MultipleLinear.js","components/pages/Services.js","components/pages/Cholesky.js","App.js","index.js"],"names":["CardItem","props","className","to","path","data-category","label","alt","src","text","Cards","HeroSection","autoPlay","loop","muted","Footer","class","Home","api","dataInTable","X","decompose","x","epsilon","output","y","tableTag","interpolatePoint","tempTag","fx","answer","regressionMatrixX","regressionMatrixY","matrixA","matrixB","func","require","expr","compile","scope","parseFloat","evaluate","funcDiff","derivative","error","xnew","xold","Math","abs","columns","title","dataIndex","key","Bisection","state","xl","xr","showOutputCard","showGraph","moveLeft","handleChange","bind","bisection","increaseFunction","xm","sum","n","data","this","toFixed","createTable","setState","i","length","push","iteration","event","target","name","value","a","axios","method","url","then","response","console","log","style","background","padding","textAlign","fontSize","color","border","id","size","placeholder","width","onChange","type","onClick","dataapi","bordered","dataSource","bodyStyle","fontWeight","Component","FalsePosition","false_position","xi","Newton","x0","newton_raphson","Onepoint","onepoint","Secant","x1","secant","A","B","Cramer","row","parseInt","column","showDimentionForm","showMatrixForm","cramer","initMatrix","counter","transformMatrix","JSON","parse","stringify","j","round","det","height","marginInlineEnd","marginBlockEnd","document","getElementById","createMatrix","display","float","Gauss","gauss","tempRow","tempColumn","k","factor","Array","Jordan","jordan","LU","Lu","lusolve","format","fraction","arrayA","arrayB","count","matrixX","Jacobi","jacobi","temp","appendTable","tag","initialSchema","overflowX","InputStyle","Seidel","seidel","backgroundColor","borderRadius","Gradient","conjugate_gradient","dimention","tempMatrix","positive_definite","R","subtract","multiply","D","λ","transpose","add","sqrt","split","join","α","lambda","Cholesky","cholesky","matrixL","L","nPoints","showInputForm","showTableInput","newton_difference","no","C","findX","initialValue","numberpoint","xfind","interpolateinput","createInterpolatePointInput","createTableInput","matrixY","pagination","overflowY","minWidth","maxHeight","Lagrange","lagrange","index","numerate","denominate","arrayX","arrayY","Spline","spline","xs","ys","ks","map","getNaturalKs","t","b","q","zerosMat","solve","m","i_max","vali","Number","NEGATIVE_INFINITY","swapRows","v","r","c","l","p","Linear","justifyContent","exponent","summation","summationOfTwo","inv","pow","linear","Polynomial","squeeze","ordernumber","polynomial","replace","MultipleLinear","multipleLinear","App","exact","component","Falseposition","NewtonR","camer","conjo","leastRLinear","leastRPoly","leastRMuti","ReactDOM","render"],"mappings":"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","file":"static/js/main.d2896f30.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CardItem(props) {\r\n  return (\r\n    <>\r\n      <li className='cards__item'>\r\n        <Link className='cards__item__link' to={props.path}>\r\n          <figure className='cards__item__pic-wrap' data-category={props.label}>\r\n            <img\r\n              className='cards__item__img'\r\n              alt='Travel Image'\r\n              src={props.src}\r\n            />\r\n          </figure>\r\n          <div className='cards__item__info'>\r\n            <h5 className='cards__item__text'>{props.text}</h5>\r\n          </div>\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;","import React from 'react';\r\nimport './Cards.css';\r\nimport CardItem from './CardItem';\r\n\r\nfunction Cards() {\r\n  return (\r\n    <div className='cards'>\r\n      <div className='cards__container'>\r\n        <div className='cards__wrapper'>\r\n          <ul className='cards__items'>\r\n    \r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Bisection Method'\r\n              label='Root Of Equattion'\r\n              path='/Bisection'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='False-Position Method'\r\n              label='Root Of Equattion'\r\n              path='/Falseposition'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Newton-Raphson Method'\r\n              label='Root Of Equattion'\r\n              path='/NewtonR'\r\n            />\r\n          </ul>\r\n          <ul className='cards__items'>\r\n          <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Secant Method'\r\n              label='Root Of Equattion'\r\n              path='/secant'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Cramer\"s Rule '\r\n              label='System Of Linear Equation'\r\n              path='/camer'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Gauss Elimination Method'\r\n              label='System Of Linear Equatione'\r\n              path='/gauss'\r\n            />\r\n          </ul>\r\n          <ul className='cards__items'>\r\n          <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Gauss-Jordan Method'\r\n              label='System Of Linear Equation'\r\n              path='/jordan'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='LU Decomposition Method'\r\n              label='System Of Linear Equation'\r\n              path='/LU'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Jacobi Iteration Method'\r\n              label='System Of Linear Equation'\r\n              path='/jacobi'\r\n            />\r\n          </ul>\r\n          <ul className='cards__items'>\r\n          <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Gauss-Seidel Iteration Method'\r\n              label='System Of Linear Equation'\r\n              path='/seidel'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Conjugate Gradient Method'\r\n              label='System Of Linear Equation'\r\n              path='/conjo'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Cholesky Decomposition Method'\r\n              label='System Of Linear Equation'\r\n              path='/cholesky'\r\n            />\r\n            </ul>\r\n          <ul className='cards__items'>\r\n          <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Newton divide'\r\n              label='Interpolation Techniques'\r\n              path='/Newton'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Lagrange'\r\n              label='Interpolation Techniques'\r\n              path='/lagrange'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Spline interpolation'\r\n              label='Interpolation Techniques'\r\n              path='/spline'\r\n            />\r\n          </ul>\r\n          <ul className='cards__items'>\r\n          <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Least - squares Regression linear regression'\r\n              label='Least - squares Regression'\r\n              path='/leastRLinear'\r\n            />\r\n          <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Least - squares Regression polynomials regression'\r\n              label='Least - squares Regression'\r\n              path='/leastRPoly'\r\n            />\r\n            <CardItem\r\n              src='images/img_onsection.jpg'\r\n              text='Least - squares Regression mutiple regression'\r\n              label='Least - squares Regression'\r\n              path='/leastRMuti'\r\n            />\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport '../App.css';\r\nimport { Button } from './Button';\r\nimport './HeroSection.css';\r\n\r\nfunction HeroSection() {\r\n  return (\r\n    <div className='hero-container'>\r\n      <video src='/videos/mylivewallpapers.com-8-Bit-Night-City.mp4' autoPlay loop muted />\r\n      <h1>NUMERICAL METHODS</h1>\r\n      <p>need someone help your homework?</p>\r\n      <div className='hero-btns'>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroSection;","import React from 'react';\r\nimport './Footer.css';\r\nimport { Button } from './Button';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className='footer-container'>\r\n      <section className='footer-subscription'>\r\n        {/* <p className='footer-subscription-heading'>\r\n          Join the Adventure newsletter to receive our best vacation deals\r\n        </p>\r\n        <p className='footer-subscription-text'>\r\n          You can unsubscribe at any time.\r\n        </p>\r\n        <div className='input-areas'>\r\n          <form>\r\n            <input\r\n              className='footer-input'\r\n              name='email'\r\n              type='email'\r\n              placeholder='Your Email'\r\n            />\r\n            <Button buttonStyle='btn--outline'>Subscribe</Button>\r\n          </form>\r\n        </div> */}\r\n      </section>\r\n      {/* <div class='footer-links'>\r\n        <div className='footer-link-wrapper'>\r\n          <div class='footer-link-items'>\r\n            <h2>About Us</h2>\r\n            <Link to='/sign-up'>How it works</Link>\r\n            <Link to='/'>Testimonials</Link>\r\n            <Link to='/'>Careers</Link>\r\n            <Link to='/'>Investors</Link>\r\n            <Link to='/'>Terms of Service</Link>\r\n          </div>\r\n          <div class='footer-link-items'>\r\n            <h2>Contact Us</h2>\r\n            <Link to='/'>Contact</Link>\r\n            <Link to='/'>Support</Link>\r\n            <Link to='/'>Destinations</Link>\r\n            <Link to='/'>Sponsorships</Link>\r\n          </div>\r\n        </div>\r\n        <div className='footer-link-wrapper'>\r\n          <div class='footer-link-items'>\r\n            <h2>Videos</h2>\r\n            <Link to='/'>Submit Video</Link>\r\n            <Link to='/'>Ambassadors</Link>\r\n            <Link to='/'>Agency</Link>\r\n            <Link to='/'>Influencer</Link>\r\n          </div>\r\n          <div class='footer-link-items'>\r\n            <h2>Social Media</h2>\r\n            <Link to='/'>Instagram</Link>\r\n            <Link to='/'>Facebook</Link>\r\n            <Link to='/'>Youtube</Link>\r\n            <Link to='/'>Twitter</Link>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      <section class='social-media'>\r\n        {/* <div class='social-media-wrap'>\r\n          <div class='footer-logo'>\r\n            <Link to='/' className='social-logo'>\r\n              NUMBERSTAR\r\n              <i class='fas fa-meteor' />\r\n            </Link>\r\n          </div>\r\n          <small class='website-rights'>NUMBERSTAR © 2021</small>\r\n          <div class='social-icons'>\r\n            <Link\r\n              class='social-icon-link facebook'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Facebook'\r\n            >\r\n              <i class='fab fa-facebook-f' />\r\n            </Link>\r\n            <Link\r\n              class='social-icon-link instagram'\r\n              to='/'\r\n              target='_blank'\r\n              aria-label='Instagram'\r\n            >\r\n              <i class='fab fa-instagram' />\r\n            </Link>\r\n          </div>\r\n        </div> */}\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport '../../App.css';\r\nimport Cards from '../Cards';\r\nimport HeroSection from '../HeroSection';\r\nimport Footer from '../Footer';\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <HeroSection />\r\n      <Cards />\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react'\r\nimport { Card, Input, Button, Table } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { error, func } from './Services';\r\nimport axios from 'axios';\r\n\r\nvar api;\r\nvar dataInTable = []\r\nconst columns = [\r\n    {\r\n        title: \"Iteration นะครับ\",\r\n        dataIndex: \"iteration\",\r\n        key: \"iteration\"\r\n    },\r\n    {\r\n        title: \"XL นะค่ะๆ\",\r\n        dataIndex: \"xl\",\r\n        key: \"xl\"\r\n    },\r\n    {\r\n        title: \"XR ไม่จำกัด\",\r\n        dataIndex: \"xr\",\r\n        key: \"xr\"\r\n    },\r\n    {\r\n        title: \"X เปลี่ยนไปเรื่อย\",\r\n        dataIndex: \"x\",\r\n        key: \"x\"\r\n    },\r\n    {\r\n        title: \"Error เลขชีวิต\",\r\n        key: \"error\",\r\n        dataIndex: \"error\"\r\n    }\r\n];\r\n\r\nclass Bisection extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            fx: \"\",\r\n            xl: 0,\r\n            xr: 0,\r\n            showOutputCard: false,\r\n            showGraph: false,\r\n            moveLeft: false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.bisection = this.bisection.bind(this);\r\n    }\r\n\r\n    bisection(xl, xr) {\r\n        var increaseFunction = false;\r\n        var xm = 0;\r\n        var sum = parseFloat(0.000);\r\n        var n = 0;\r\n        var data = []\r\n        data['xl'] = []\r\n        data['xr'] = []\r\n        data['x'] = []\r\n        data['error'] = []\r\n        if (func(this.state.fx, xl) < func(this.state.fx, xr)) {\r\n            increaseFunction = true;\r\n        }\r\n\r\n        do {\r\n            xm = (xl + xr) / 2;\r\n            if (func(this.state.fx, xm) * func(this.state.fx, xr) < 0) {\r\n                sum = error(xm, xr);\r\n                if (increaseFunction) {\r\n                    xl = xm;\r\n                }\r\n                else {\r\n                    xr = xm;\r\n                }\r\n\r\n            }\r\n            else {\r\n                sum = error(xm, xl);\r\n                if (increaseFunction) {\r\n                    xr = xm;\r\n                }\r\n                else {\r\n                    xl = xm;\r\n                }\r\n            }\r\n            data['xl'][n] = xl;\r\n            data['xr'][n] = xr;\r\n            data['x'][n] = xm.toFixed(6);\r\n            data['error'][n] = Math.abs(sum).toFixed(6);\r\n            n++;\r\n        } while (Math.abs(sum) > 0.001);\r\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\r\n        this.setState({\r\n            showOutputCard: true,\r\n        })\r\n\r\n\r\n    }\r\n\r\n    createTable(xl, xr, x, error) {\r\n        dataInTable = []\r\n        for (var i = 0; i < xl.length; i++) {\r\n            dataInTable.push({\r\n                key:i,\r\n                iteration: i + 1,\r\n                xl: xl[i],\r\n                xr: xr[i],\r\n                x: x[i],\r\n                error: error[i]\r\n            });\r\n        }\r\n\r\n    }\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n\r\n    }\r\n    \r\n    async dataapi() {\r\n        await axios({method: \"get\",url: \"http://localhost:5000/database/bisection\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\r\n        await this.setState({\r\n            fx:api.fx,\r\n          xl:api.xl,\r\n          xr:api.xr\r\n        })\r\n        this.bisection(this.state.xl,this.state.xr)\r\n      }\r\n      \r\n   \r\n    render() {\r\n        let { fx, xl, xr } = this.state;\r\n        return (\r\n            \r\n            <div style={{ background: \"#FFFF\", padding: \"100px\"}}>\r\n                <h1 style = {{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Bisection Method </h1>\r\n                \r\n                    <form style = {{textAlign: 'left',fontSize:'21px'}} id=\"inputCard\"\r\n                    \r\n                    >\r\n                    <h4>Equation : &nbsp;&nbsp;               \r\n                        <Input size=\"large\" placeholder=\"Input your Function\" name =\"fx\" value={this.state.fx} style={{ width: 500 }}\r\n                        onChange={this.handleChange}\r\n                        />\r\n                    </h4>\r\n                    <br></br>\r\n                    <h4>XL : &nbsp;&nbsp;\r\n                        <Input size=\"large\" placeholder=\"Input your Xl\" name =\"xl\" value={this.state.xl} style={{ width: 500 }}\r\n                        onChange={this.handleChange}\r\n                        />\r\n                    </h4>\r\n                    <br></br>\r\n                    <h4>XR : &nbsp;&nbsp;\r\n                        <Input size=\"large\" placeholder=\"Input your Xr\" name = \"xr\" value={this.state.xr} style={{ width: 500 }}\r\n                        onChange={this.handleChange}\r\n                        />\r\n                    </h4>\r\n                    <br></br>\r\n                    \r\n                    <Button type=\"submit\"   size=\"large\"\r\n                    style={{ color:'#cc33ff',background:'#ffffff'}}\r\n                    onClick={() => this.bisection(parseFloat(xl), parseFloat(xr))}\r\n                    >\r\n                        Submit\r\n                    </Button>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <Button type=\"submit\"   size=\"large\"\r\n                    style={{ color:'white',background:'#cc33ff'}}\r\n                    onClick={() => this.dataapi()}\r\n                    >\r\n                        Function\r\n                    </Button>\r\n                    </form>\r\n                <br></br>\r\n                <div className=\"row\">\r\n                    {this.state.showOutputCard &&\r\n                        \r\n                            <Table  columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}></Table>\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default Bisection;","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { error, func } from './Services';\nvar api;\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"XL\",\n        dataIndex: \"xl\",\n        key: \"xl\"\n    },\n    {\n        title: \"XR\",\n        dataIndex: \"xr\",\n        key: \"xr\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass FalsePosition extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            xl: 0,\n            xr: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.false_position = this.false_position.bind(this);\n    }\n\n    false_position(xl, xr) {\n        var increaseFunction = false;\n        var xi = 0;\n        var epsilon = parseFloat(0.000);\n        var n = 0;\n        var data = []\n        data['xl'] = []\n        data['xr'] = []\n        data['x'] = []\n        data['error'] = []\n        if (func(this.state.fx, xl) < func(this.state.fx, xr)) {\n            increaseFunction = true;\n        }\n        do {\n            xi = (xl * func(this.state.fx, xr) - xr * func(this.state.fx, xl)) / (func(this.state.fx, xr) - func(this.state.fx, xl));\n            if (func(this.state.fx, xi) * func(this.state.fx, xr) < 0) {\n                epsilon = error(xi, xr);\n                if (increaseFunction) {\n                    xl = xi;\n                }\n                else {\n                    xr = xi;\n                }\n\n            }\n            else {\n                epsilon = error(xi, xl);\n                if (increaseFunction) {\n                    xr = xi;\n                }\n                else {\n                    xl = xi;\n                }\n\n            }\n            data['xl'][n] = xl.toFixed(6);\n            data['xr'][n] = xr.toFixed(6);\n            data['x'][n] = xi.toFixed(6);\n            data['error'][n] = Math.abs(epsilon).toFixed(6);\n            n++;\n\n        } while (Math.abs(epsilon) > 0.001);\n\n        this.createTable(data['xl'], data['xr'], data['x'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n\n    createTable(xl, xr, x, error) {\n        dataInTable = []\n        for (var i = 0; i < xl.length; i++) {\n            dataInTable.push({\n                iteration: i + 1,\n                xl: xl[i],\n                xr: xr[i],\n                x: x[i],\n                error: error[i]\n            });\n        }\n\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    async dataapi() {\n        await axios({method: \"get\",url: \"http://localhost:5000/database/falseposition\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\n        await this.setState({\n            fx:api.fx,\n          xl:api.xl,\n          xr:api.xr\n          \n        })\n        this.false_position(this.state.xl,this.state.xr)\n      }\n\n    render() {\n        let { fx, xl, xr } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"100px\" }}>\n                <h1 style = {{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>False Position </h1>\n                \n\n                <form style = {{textAlign: 'left',fontSize:'21px'}}\n                  \n                  >\n                    <h4>Equation  : &nbsp;&nbsp;               \n                      <Input size=\"large\" placeholder=\"Input your Function\" name =\"fx\" value={this.state.fx}style={{ width: 300 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    <h4>XL : &nbsp;&nbsp;\n                      <Input size=\"large\" placeholder=\"Input your Xl\" name =\"xl\" value={this.state.xl} style={{ width: 200 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    <h4>XR : &nbsp;&nbsp;\n                      <Input size=\"large\" placeholder=\"Input your Xr\" name = \"xr\" value={this.state.xr}style={{ width: 200 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    \n                    <Button type=\"submit\"   size=\"large\"\n                    style={{ color:'#cc33ff',background:'#ffffff'}}\n                    onClick={() => this.false_position(parseFloat(xl), parseFloat(xr))}\n                    >\n                      Submit\n                    </Button>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <Button type=\"submit\"   size=\"large\"\n                    style={{ color:'white',background:'#cc33ff'}}\n                    onClick={() => this.dataapi()}\n                    >\n                      Function\n                    </Button>\n                  </form>\n                  <br></br>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        \n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\n                            ></Table>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default FalsePosition;","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { error, func, funcDiff } from './Services';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar dataInTable;\nconst columns = [\n    {\n        title: \"อิน-เตอร์-เล-ชั้น\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"เอ็ก\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"เออเลอร์\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Newton extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.newton_raphson = this.newton_raphson.bind(this);\n    }\n\n    newton_raphson(xold) {\n        console.log(funcDiff(xold))\n        var xnew = 0;\n        var epsilon = parseFloat(0.00000000);\n        var n = 0;\n        var data = []\n        data['x'] = []\n        data['error'] = []\n        do {\n            xnew = xold - (func(this.state.fx, xold) / funcDiff(this.state.fx,xold));\n            epsilon = error(xnew, xold)\n            data['x'][n] = xnew.toFixed(8);\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\n            n++;\n            xold = xnew;\n        } while (Math.abs(epsilon) > 0.0000001);\n\n        this.createTable(data['x'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n    createTable(x, error) {\n        dataInTable = []\n        for (var i = 0; i < x.length; i++) {\n            dataInTable.push({\n                key:i,\n                iteration: i + 1,\n                x: x[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    async dataapi() {\n        await axios({method: \"get\",url: \"http://localhost:5000/database/newtonraphson\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\n        await this.setState({\n            fx:api.fx,\n          x0:api.x0\n          \n        })\n        this.newton_raphson(this.state.x0)\n      }\n    render() {\n        let { fx, x0 } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"100px\" }}>\n                {/* <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Newton Raphson</h2> */}\n                <h1 style = {{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Newton Raphson</h1>\n                {/* <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\n                            <Button id=\"submit_button\" onClick={\n                                () => this.newton_raphson(parseFloat(x0))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showGraph && <Graph fx={fx} title=\"Newton-Raphson\" />}\n                    </div>\n                </div> */}\n\n                <form style = {{textAlign: 'left',fontSize:'21px'}}>\n                    <h4>Equation  : &nbsp;&nbsp;               \n                      <Input size=\"large\" placeholder=\"Input your Function\" name =\"fx\" value={this.state.fx}style={{ width: 300 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    <h4>X0 : &nbsp;&nbsp;\n                      <Input size=\"large\" placeholder=\"Input your X0\" name =\"x0\" value={this.state.x0}style={{ width: 200 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    \n                    \n                    <Button type=\"submit\"   size=\"large\"\n                    style={{ color:'#cc33ff',background:'#ffffff'}}\n                    onClick={() => this.newton_raphson(parseFloat(x0))}\n                    >\n                      Submit\n                    </Button>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <Button type=\"submit\"   size=\"large\"\n                    style={{  color:'white',background:'#cc33ff'}}\n                    onClick={() => this.dataapi()}\n                    >\n                      Function\n                    </Button>\n                  </form>\n                  <br></br>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        // <Card\n                        //     title={\"Output\"}\n                        //     bordered={true}\n                        //     style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\n                        //     id=\"outputCard\"\n                        // >\n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\n                            ></Table>\n                        // </Card>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\nexport default Newton;","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { error, func } from './Services';\nimport axios from 'axios';\nvar api;\n\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n\n};\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Onepoint extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.onepoint = this.onepoint.bind(this);\n    }\n    \n    onepoint(xold) {\n        var xnew = 0;\n        var epsilon = parseFloat(0.000000);\n        var n = 0;\n        var data = []\n        data['x'] = []\n        data['error'] = []\n\n        do {\n            xnew = func(this.state.fx, xold);\n            epsilon = error(xnew, xold)\n            data['x'][n] = xnew.toFixed(8);\n            data['error'][n] = Math.abs(epsilon).toFixed(8);\n            n++;\n            xold = xnew;\n\n        } while (Math.abs(epsilon) > 0.000001);\n\n        this.createTable(data['x'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n    }\n\n    createTable(x, error) {\n        dataInTable = []\n        for (var i = 0; i < x.length; i++) {\n            dataInTable.push({\n                key:i,\n                iteration: i + 1,\n                x: x[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    async dataapi() {\n        await axios({method: \"get\",url: \"http://localhost:5000/database/onepoint\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\n        await this.setState({\n            fx:api.fx,\n          x0:api.x0\n          \n          \n        })\n        this.onepoint(this.state.x0)\n      }\n    render() {\n        let { fx, x0 } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                {/* <h2>One Point Iteration</h2> */}\n                <h1 style = {{textAlign: 'center',fontSize:'30px'}}>One Point Iteration </h1>\n                {/* <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\n                            <Button id=\"submit_button\" onClick={\n                                () => this.onepoint(parseFloat(x0))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showGraph && <Graph fx={fx} title=\"One Point Iteration Method\" />}\n                    </div>\n                </div> */}\n\n                <form style = {{textAlign: 'center',fontSize:'21px'}}\n                  \n                  >\n                    <h4>Equation  : &nbsp;&nbsp;               \n                      <Input size=\"large\" placeholder=\"Input your Function\" name =\"fx\" value={this.state.fx}style={{ width: 300 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    <h4>X0 : &nbsp;&nbsp;\n                      <Input size=\"large\" placeholder=\"Input your X0\" name =\"x0\" value={this.state.x0}style={{ width: 200 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    \n                    \n                    <Button type=\"submit\"   size=\"large\"\n                    style={{ color:'#ffffff',background:'#008080'}}\n                    onClick={() => this.onepoint(parseFloat(x0))}\n                    >\n                      Submit\n                    </Button>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <Button type=\"submit\"   size=\"large\"\n                    style={{ color:'#black',background:'#f7c602'}}\n                    onClick={() => this.dataapi()}\n                    >\n                      Function\n                    </Button>\n                  </form>\n                  <br></br>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        // <Card\n                        //     title={\"Output\"}\n                        //     bordered={true}\n                        //     style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\n                        //     id=\"outputCard\"\n                        // >\n                            <Table columns={columns} bordered={true} dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}>\n\n\n                            </Table>\n                        // </Card>\n                    }\n                </div>\n            </div>\n\n\n        );\n    }\n}\nexport default Onepoint;","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { error, func } from './Services';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar dataInTable = []\nconst columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    },\n    {\n        title: \"Error\",\n        key: \"error\",\n        dataIndex: \"error\"\n    }\n];\n\nclass Secant extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fx: \"\",\n            x0: 0,\n            x1: 0,\n            showOutputCard: false,\n            showGraph: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.secant = this.secant.bind(this);\n    }\n\n    secant(x0, x1) {\n        var x = [], y = 0, epsilon = parseFloat(0.000);\n        var n = 1, i = 1;\n        var data = []\n        data['y'] = []\n        data['error'] = []\n        x.push(x0);\n        x.push(x1);\n        data['y'][0] = x0;\n        data['error'][0] = \"xxxx\";\n\n        do {\n            y = x[i] - (func(this.state.fx, x[i]) * ((x[i] - x[i - 1]))) / (func(this.state.fx, x[i]) - func(this.state.fx, x[i - 1]));\n            x.push(y);\n            epsilon = error(y, x[i]);\n            data['y'][n] = y.toFixed(6);\n            data['error'][n] = Math.abs(epsilon).toFixed(6);\n\n            n++;\n            i++;\n\n        } while (Math.abs(epsilon) > 0.001);\n        this.createTable(data['y'], data['error']);\n        this.setState({\n            showOutputCard: true,\n            showGraph: true\n        })\n\n\n    }\n\n    createTable(y, error) {\n        dataInTable = []\n        for (var i = 0; i < y.length; i++) {\n            dataInTable.push({\n                key:i,\n                iteration: i + 1,\n                y: y[i],\n                error: error[i]\n            });\n        }\n\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    async dataapi() {\n        await axios({method: \"get\",url: \"http://localhost:5000/database/secant\",}).then((response) => {console.log(\"response: \", response.data);api = response.data;});\n        await this.setState({\n            fx:api.fx,\n          xl:api.x0,\n          x1:api.x1\n          \n        })\n        this.secant(this.state.x0,this.state.x1)\n      }\n    render() {\n        let { fx, x0, x1 } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"100px\" }}>\n                {/* <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Secant Method</h2> */}\n                <h1 style = {{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Secant Method</h1>\n                {/* <div className=\"row\">\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"gray\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n                            <h2>f(x)</h2><Input size=\"large\" name=\"fx\" style={InputStyle}></Input>\n                            <h2>X<sub>0</sub></h2><Input size=\"large\" name=\"x0\" style={InputStyle}></Input>\n                            <h2>X<sub>1</sub></h2><Input size=\"large\" name=\"x1\" style={InputStyle}></Input><br /><br />\n                            <Button id=\"submit_button\" onClick={\n                                () => this.secant(parseFloat(x0), parseFloat(x1))\n                            }\n                                style={{ background: \"#4caf50\", color: \"white\" }}>Submit</Button>\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showGraph && <Graph fx={fx} title=\"Secant Method\" />}\n                    </div>\n                </div> */}\n\n                <form style = {{textAlign: 'left',fontSize:'21px'}}>\n                    <h4>Equation  : &nbsp;&nbsp;               \n                      <Input size=\"large\" placeholder=\"Input your Function\" name =\"fx\" value={this.state.fx}style={{ width: 300 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    <h4>X0 : &nbsp;&nbsp;\n                      <Input size=\"large\" placeholder=\"Input your Xl\" name =\"x0\" value={this.state.x0}style={{ width: 200 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    <h4>X1 : &nbsp;&nbsp;\n                      <Input size=\"large\" placeholder=\"Input your Xr\" name = \"x1\"value={this.state.x1}style={{ width: 200 }}\n                      onChange={this.handleChange}\n                      />\n                    </h4>\n                    <br></br>\n                    \n                    <Button type=\"submit\"   size=\"large\"\n                    style={{ color:'#cc33ff',background:'#ffffff'}}\n                    onClick={() => this.secant(parseFloat(x0), parseFloat(x1))}\n                    >\n                      Submit\n                    </Button>\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                    <Button type=\"submit\"   size=\"large\"\n                    style={{ color:'white',background:'#cc33ff'}}\n                    onClick={() => this.dataapi()}\n                    >\n                      Function\n                    </Button>\n                  </form>\n                  <br></br>\n                <div className=\"row\">\n                    {this.state.showOutputCard &&\n                        // <Card\n                        //     title={\"Output\"}\n                        //     bordered={true}\n                        //     style={{ width: \"100%\", background: \"#2196f3\", color: \"#FFFFFFFF\" }}\n                        //     id=\"outputCard\"\n                        // >\n                            <Table columns={columns} bordered={true}dataSource={dataInTable} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\" }}\n                            ></Table>\n                        // </Card>\n                    }\n                </div>\n\n            </div>\n\n        );\n    }\n}\nexport default Secant;\n\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport { det } from 'mathjs';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nvar api;\n\nvar A = [], B = [], answer = [], matrixA = [], matrixB = []\nclass Cramer extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: parseInt(0),\n            column: parseInt(0),\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.cramer = this.cramer.bind(this);\n\n    }\n\n    cramer() {\n        this.initMatrix();\n        // เอา array A[],B[] มาคำนวนต่อ\n        var counter = 0;\n        while (counter != this.state.row) {\n            var transformMatrix = JSON.parse(JSON.stringify(A)); //Deep copy\n            for (var i = 0; i < this.state.row; i++) {\n                for (var j = 0; j < this.state.column; j++) {\n                    if (j === counter) {\n                        transformMatrix[i][j] = B[i]\n                        break;\n                    }\n\n                }\n\n            }\n            counter++;\n            answer.push(<h2>X<sub>{counter}</sub>=&nbsp;&nbsp;{Math.round(det(transformMatrix)) / Math.round(det(A))}</h2>)\n            answer.push(<br />)\n\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n    }\n    // สร้าง inputโดยใช้ matrixA[],matrixB[] ในการเก็บtag input และกำหนด id a,b\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"14%\",\n                    height: \"50%\",\n                    marginInlineEnd: \"0%\",\n                    marginBlockEnd: \"0%\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"14%\",\n                height: \"50%\",\n                marginInlineEnd: \"0%\",\n                marginBlockEnd: \"10%\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n        }\n\n        this.setState({\n            showDimentionForm: true,\n            showMatrixForm: true,\n        })\n\n\n    }\n    // ดึงค่าจาก id a,b มาเก็บใน array A[],B[]\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/cramer\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n          row: api.row,\n          column: api.column,\n        });\n        // matrixA = [];\n        // matrixB = [];\n        await this.createMatrix(api.row, api.column);\n        for (let i = 1; i <= api.row; i++) {\n          for (let j = 1; j <= api.column; j++) {\n            document.getElementById(\"a\" + i + \"\" + j).value =\n              api.matrixA[i - 1][j - 1];\n          }\n          document.getElementById(\"b\" + i).value = api.matrixB[i - 1];\n        }\n        this.cramer();\n      }\n\n    render() {\n        let { row, column } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\",padding: \"30px\" }}>\n                <h1 style = {{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Cramer's Rule</h1>\n\n                <div className=\"row\" style={{display:'flex'}}>\n                    <div style = {{textAlign: 'center',fontSize:'21px'}}>\n                        \n\n                        {this.state.showDimentionForm &&\n                            <div>\n                                <h4>Row  : &nbsp;&nbsp;<Input size=\"large\" name=\"row\" style={{ width: 150 }} value={this.state.row} onChange={this.handleChange}></Input></h4><br />\n                                <h4>Column  : &nbsp;&nbsp;<Input size=\"large\" name=\"column\" value={this.state.column} style={{ width: 150 }} onChange={this.handleChange}></Input></h4><br />\n                                <Button id=\"dimention_button\" size=\"large\"onClick={\n                                    () => this.createMatrix(row, column)\n                                }\n                                    style={{ color:'#cc33ff',background:'#ffffff'}}>\n                                    Submit\n                                </Button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    <Button type=\"submit\"   size=\"large\"\n                                    style={{  color:'white',background:'#cc33ff'}}\n                                    onClick={() => this.dataapi()}>\n                                        Function\n                                    </Button>\n                            </div>\n                        }\n                        {this.state.showMatrixForm &&\n                            <div>\n                                <br />\n                                <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Matrix [A]</h2>{matrixA}\n                                <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Vector [B]</h2>{matrixB}<br/>\n                                <Button\n                                    size=\"large\"\n                                    id=\"matrix_button\"\n                                    style={{ width: 150 , color:'#cc33ff',background:'#ffffff'}}\n                                    onClick={() => this.cramer()}>\n                                    Submit\n                            </Button>\n                            </div>\n                        }\n                    </div>\n                        <br />\n                        <br />\n                    <div className=\"col\">\n                    \n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ width: \"100%\", background: \"#ffffff\", color: \"#FFFFFFFF\", float: \"left\" }}\n                                onChange={this.handleChange}>\n                                <p style={{ fontSize: \"18px\", fontWeight: \"bold\" }}>{answer}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\nexport default Cramer;\n\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], X, matrixA = [], matrixB = [], output = []\nclass Gauss extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.gauss = this.gauss.bind(this);\n\n    }\n\n    gauss(n) {\n        this.initMatrix() // เอา array A[],B[] มาคำนวนต่อ\n        if (A[0][0] === 0) { //pivoting\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\n            var tempColumn = B[0];\n            A[0] = A[1];\n            A[1] = tempRow;\n            B[0] = B[1];\n            B[1] = tempColumn;\n        }\n        //Forward eliminated\n        for (var k = 0; k < n; k++) {\n            for (var i = k + 1; i < n; i++) {\n                var factor = A[i][k] / A[k][k];\n                for (var j = k; j < n; j++) {\n                    A[i][j] = A[i][j] - factor * A[k][j];\n                }\n                B[i] = B[i] - factor * B[k];\n            }\n        }\n        //Backward Substitution\n        X = new Array(n);\n        X[n - 1] = Math.round(B[n - 1] / A[n - 1][n - 1]); //find Xn\n        for (i = n - 2; i >= 0; i--) { //find Xn-1 to X1\n            var sum = B[i];\n            for (j = i + 1; j < n; j++) {\n                sum = sum - A[i][j] * X[j];\n            }\n            X[i] = Math.round(sum / A[i][i]);\n        }\n        for (i = 0; i < n; i++) {\n            output.push(\"x\" + (i + 1) + \" = \" + X[i]);\n            output.push(<br />)\n        }\n\n        this.setState({\n            showOutputCard: true\n        });\n\n    }\n    // สร้าง inputโดยใช้ matrixA[],matrixB[] ในการเก็บtag input และกำหนด id a,b\n    createMatrix(row, column) {\n        A = []\n        B = []\n        X = []\n        matrixA = []\n        matrixB = []\n        output = []\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"7%\",\n                    height: \"25%\",\n                    // backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"0%\",\n                    marginBlockEnd: \"0%\",\n                    // color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"7%\",\n                height: \"25%\",\n                // backgroundColor: \"black\",\n                marginInlineEnd: \"0%\",\n                marginBlockEnd: \"5%\",\n                // color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: true,\n            showMatrixForm: true,\n        })\n\n\n    }\n    // ดึงค่าจาก id a,b มาเก็บใน array A[],B[]\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    \n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/gauss\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n          row: api.row,\n          column: api.column,\n        });\n        matrixA = [];\n        matrixB = [];\n        await this.createMatrix(api.row, api.column);\n        for (let i = 1; i <= api.row; i++) {\n          for (let j = 1; j <= api.column; j++) {\n            document.getElementById(\"a\" + i + \"\" + j).value =\n              api.matrixA[i - 1][j - 1];\n          }\n          document.getElementById(\"b\" + i).value = api.matrixB[i - 1];\n        }\n        this.gauss(this.state.row);\n      }\n\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"100px\"}}>\n                <h1 style={{ textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px' }}>Gauss Elimination</h1>\n                <div className=\"row\" style={{display:'flex'}}>\n                    <div className=\"col\" style = {{textAlign: 'left',fontSize:'21px'}}onChange={this.handleChange}>\n                        {this.state.showDimentionForm &&\n                            <div>\n                                <h4>Row  : &nbsp;&nbsp;<Input size=\"large\" name=\"row\" value={this.state.row}style={{ width: 150 }}></Input></h4><br />\n                                <h4>Column  : &nbsp;&nbsp;<Input size=\"large\" name=\"column\" value={this.state.column}style={{ width: 150 }}></Input></h4><br />\n                                <Button id=\"dimention_button\" size=\"large\" onClick={\n                                    () => this.createMatrix(this.state.row, this.state.column)\n                                }\n                                    style={{ color:'white',background:'#cc33ff' }}>\n                                    Submit<br></br>\n                                </Button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    <Button type=\"submit\"   size=\"large\"\n                                    style={{ color:'#cc33ff',background:'#ffffff'}}\n                                    onClick={() => this.dataapi()}>\n                                        Function\n                                    </Button>\n                            </div>\n                        }\n\n                        {this.state.showMatrixForm &&\n                            <div>\n                                <br />\n                                <h2 style = {{textAlign: 'left',fontSize:'30px'}}>Matrix [A]</h2><br />{matrixA}\n                                <h2 style = {{textAlign: 'left',fontSize:'30px'}}>Vector [B]<br /></h2>{matrixB}\n                                <br/>\n                                <Button\n                                    size=\"large\"\n                                    id=\"matrix_button\"\n                                    style={{ width: 150 ,color:'white',background:'#cc33ff' }}\n                                    onClick={() => this.gauss(this.state.row)}>\n                                    Submit\n                                </Button>\n                            </div>\n                        }\n                    </div>\n                    <br />\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"All Output\"}\n                                bordered={true}\n                                style={{ background: \"while\", color: \"black\" }}\n                                onChange={this.handleChange} id=\"answerCard\">\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\n                            </Card>\n                        }                        \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Gauss;\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\nclass Jordan extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.jordan = this.jordan.bind(this);\n\n    }\n\n    jordan(n) {\n        this.initMatrix();\n        if (A[0][0] === 0) { //pivoting\n            var tempRow = JSON.parse(JSON.stringify(A[0]));\n            var tempColumn = B[0];\n            A[0] = A[1];\n            A[1] = tempRow;\n            B[0] = B[1];\n            B[1] = tempColumn;\n        }\n        //Forward eliminate\n        for (var k = 0; k < n; k++) {\n            for (var i = k + 1; i < n; i++) {\n                var factor = A[i][k] / A[k][k];\n                for (var j = k; j < n; j++) {\n                    A[i][j] = A[i][j] - factor * A[k][j];\n                }\n                B[i] = B[i] - factor * B[k];\n\n            }\n        }\n        //Backward Substitution\n        for (k = n - 1; k >= 0; k--) {\n            for (i = k; i >= 0; i--) {\n\n                if (i === k) {//Identity matrix\n                    factor = 1 / A[i][k];\n\n                    for (j = 0; j < n; j++) {\n                        A[i][j] = A[i][j] * factor;\n                    }\n                    B[i] = B[i] * factor;\n\n\n                }\n                else {\n                    factor = A[i][k] / A[k][k];\n                    for (j = 0; j < n; j++) {\n                        A[i][j] = A[i][j] - factor * A[k][j];\n                    }\n                    B[i] = B[i] - factor * B[k];\n                }\n            }\n        }\n        for (i = 0; i < n; i++) {\n            output.push(\"x\" + (i + 1) + \" = \" +B[i]);\n            output.push(<br />)\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n\n    }\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"7%\",\n                    height: \"25%\",\n                    marginInlineEnd: \"0%\",\n                    marginBlockEnd: \"0%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"7%\",\n                height: \"25%\",\n                marginInlineEnd: \"0%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: true,\n            showMatrixForm: true,\n        })\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/gauss\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n          row: api.row,\n          column: api.column,\n        });\n        matrixA = [];\n        matrixB = [];\n        await this.createMatrix(api.row, api.column);\n        for (let i = 1; i <= api.row; i++) {\n          for (let j = 1; j <= api.column; j++) {\n            document.getElementById(\"a\" + i + \"\" + j).value =\n              api.matrixA[i - 1][j - 1];\n          }\n          document.getElementById(\"b\" + i).value = api.matrixB[i - 1];\n        }\n        this.jordan(api.row);\n      }\n\n    render() {\n        let { row, column } = this.state;\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h1 style={{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Gauss-Jordan Method</h1>\n                <div className=\"row\" style={{display:'flex'}}>\n                    <div className=\"col\" onChange={this.handleChange}style = {{textAlign: 'center',fontSize:'21px'}}>\n                        \n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h4>Row  : &nbsp;&nbsp;<Input size=\"large\" name=\"row\" value={this.state.row}style={{ width: 150 }}></Input></h4><br />\n                                    <h4>Column  : &nbsp;&nbsp;<Input size=\"large\" name=\"column\" value={this.state.column}style={{ width: 150 }}></Input></h4><br />\n                                    <Button id=\"dimention_button\" size=\"large\"onClick={\n                                        () => this.createMatrix(row, column)\n                                    }\n                                        style={{ color:'#cc33ff',background:'#ffffff'}}>\n                                        Submit<br></br>\n                                    </Button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    <Button type=\"submit\"   size=\"large\"\n                                    style={{ color:'white',background:'#cc33ff'}}\n                                    onClick={() => this.dataapi()}>\n                                        Function\n                                    </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <br />\n                                    <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Matrix [A]</h2><br />{matrixA}\n                                    <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Vector [B]<br /></h2>{matrixB}\n                                    <br/>\n                                    <Button\n                                        size=\"large\"\n                                        id=\"matrix_button\"\n                                        style={{  width: 150 ,color:'#cc33ff',background:'#ffffff'}}\n                                        onClick={() => this.jordan(row)}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n\n\n                    </div>\n                    <br />\n                    <div className=\"col\" >\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ width: \"100%\", background: \"while\", color: \"black\", float: \"left\" }}\n                                onChange={this.handleChange} id=\"answerCard\">\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Jordan;\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Input, Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { lusolve, format } from 'mathjs';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], output = [], decompose;\nclass LU extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.Lu = this.Lu.bind(this);\n\n    }\n\n    Lu() {\n        this.initMatrix();\n        decompose = lusolve(A, B)\n        for (var i = 0; i < decompose.length; i++) {\n            output.push(Math.round(decompose[i]));\n            output.push(<br />)\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n\n    }\n\n    printFraction(value) {\n        return format(value, { fraction: 'ratio' })\n    }\n\n    createMatrix(row, column) {\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"9%\",\n                    height: \"50%\",\n                    // backgroundColor: \"#06d9a0\",\n                    marginInlineEnd: \"0%\",\n                    marginBlockEnd: \"0%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"9%\",\n                height: \"50%\",\n                // backgroundColor: \"black\",\n                marginInlineEnd: \"0%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: true,\n            showMatrixForm: true,\n        })\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/LU\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n          row: api.row,\n          column: api.column,\n        });\n        await this.createMatrix(api.row, api.column);\n        for (let i = 1; i <= api.row; i++) {\n          for (let j = 1; j <= api.column; j++) {\n            document.getElementById(\"a\" + i + \"\" + j).value =\n              api.arrayA[i - 1][j - 1];\n          }\n          document.getElementById(\"b\" + i).value = api.arrayB[i - 1];\n        }\n        await this.Lu();\n      }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h1 style={{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>LU Decomposition</h1>\n                <div className=\"row\" style={{display:'flex'}}>\n                    <div className=\"col\" onChange={this.handleChange} style = {{textAlign: 'center',fontSize:'21px'}}>\n                        \n\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h4>Row  : &nbsp;&nbsp;<Input size=\"large\" name=\"row\" value={this.state.row}style={{ width: 150 }}></Input></h4><br />\n                                    <h4>Column  : &nbsp;&nbsp;<Input size=\"large\" name=\"column\" value={this.state.column}style={{ width: 150 }}></Input></h4><br />\n                                    <Button id=\"dimention_button\" size=\"large\"onClick={\n                                        () => this.createMatrix(this.state.row, this.state.column)\n                                    }\n                                        style={{ color:'#cc33ff',background:'#ffffff'}}>\n                                        Submit\n                                </Button>\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                    <Button type=\"submit\"   size=\"large\"\n                                    style={{ color:'white',background:'#cc33ff'}}\n                                    onClick={() => this.dataapi()}>\n                                        Function\n                                    </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <br />\n                                    <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Matrix [A]</h2><br />{matrixA}\n                                    <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Vector [B]<br /></h2>{matrixB}\n                                    <br />\n                                <Button size=\"large\"\n                                        id=\"matrix_button\"\n                                        style={{ width: 150 ,color:'white',background:'#cc33ff'}}\n                                        onClick={() => this.Lu()}>\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n                    </div>\n                    <br />\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ background: \"white\", color: \"black\" }}\n                                onChange={this.handleChange} id=\"answerCard\">\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{output}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default LU;\n\n\n\n","import React, { Component } from 'react'\nimport {Card, Input, Button, Table} from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\"\n\n};\n\n\nvar A = [], B = [], matrixA = [], matrixB = [], x , epsilon, dataInTable = [], count=1, matrixX = []\nvar columns = [\n    {\n      title: \"Iteration\",\n      dataIndex: \"iteration\",\n      key: \"iteration\"\n    }\n];\nclass Jacobi extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm : true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.jacobi = this.jacobi.bind(this);\n    \n    }\n\n \n    jacobi(n) {\n        this.initMatrix();\n        var temp;\n        var xold;\n        epsilon = new Array(n);\n        do {\n            temp = [];\n            xold = JSON.parse(JSON.stringify(x));\n            for (var i=0 ; i<n ; i++) {\n                var sum = 0;\n                for (var j=0 ; j<n ; j++) {\n                    if (i !== j) { //else i == j That is a divide number\n                        sum = sum + A[i][j]*x[j];\n                    }\n                }\n                temp[i] = (B[i] - sum)/A[i][i]; //update x[i]\n                \n            }        \n            x = JSON.parse(JSON.stringify(temp));\n        } while(this.error(x, xold)); //if true , continue next iteration\n\n        this.setState({\n            showOutputCard: true\n        });\n\n    }\n    error(xnew, xold) {\n        for (var i=0 ; i<xnew.length ; i++) {\n            epsilon[i] = Math.abs((xnew[i]-xold[i]) / xnew[i])\n        }\n        this.appendTable(x, epsilon);\n        for (i=0 ; i<epsilon.length ; i++) {\n            if (epsilon[i] > 0.000001) {\n                return true;\n            }    \n        }\n        return false;  \n    }   \n    createMatrix(row, column) {\n        A = []\n        B = []\n        matrixA = []\n        matrixB = []\n        x = []\n        dataInTable = []\n        for (var i=1 ; i<=row ; i++) {\n            for (var j=1 ; j<=column ; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\", \n                    // backgroundColor:\"#06d9a0\", \n                    marginInlineEnd: \"0%\", \n                    marginBlockEnd: \"0%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }} \n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \n            }\n            matrixA.push(<br/>)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                // backgroundColor:\"black\", \n                marginInlineEnd: \"0%\", \n                marginBlockEnd: \"0%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\n            matrixX.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                // backgroundColor:\"black\", \n                marginInlineEnd: \"0%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i} />)  \n            \n        }\n\n        this.setState({\n            showDimentionForm: true,\n            showMatrixForm: true,\n        })\n\n    }\n    initMatrix() {\n        for(var i=0 ; i<this.state.row ; i++) {\n            A[i] = []\n            for(var j=0 ; j<this.state.column ; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n            x.push(parseFloat(document.getElementById(\"x\"+(i+1)).value));\n        }\n    }\n    \n    initialSchema(n) {\n        for (var i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"X\"+i,\n                dataIndex: \"x\"+i,\n                key: \"x\"+i\n            },)\n        }\n        for (i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"Error\"+i,\n                dataIndex: \"error\"+i,\n                key: \"error\"+i\n            },)\n        }\n    }\n\n    appendTable(x, error) {\n        var tag = ''\n        tag += '{\"iteration\": ' + count++ + ',';\n        for (var i=0 ; i<x.length ; i++) {\n            tag += '\"x'+(i+1)+'\": '+x[i].toFixed(8)+', \"error'+(i+1)+'\": ' + error[i].toFixed(8);\n            if (i !== x.length-1) {\n                tag += ','\n            }\n        }\n        tag += '}';\n        dataInTable.push(JSON.parse(tag));  \n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/jacobi\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n          row: api.row,\n          column: api.column\n        });\n        matrixA = [];\n        matrixB = [];\n        matrixX = [];\n        await this.createMatrix(api.row, api.column);\n        await this.initialSchema(this.state.row);\n        for (let i = 1; i <= api.row; i++) {\n          for (let j = 1; j <= api.column; j++) {\n            document.getElementById(\"a\" + i + \"\" + j).value =\n              api.matrixA[i - 1][j - 1];\n          }\n          document.getElementById(\"b\" + i).value = api.matrixB[i - 1];\n          document.getElementById(\"x\" + i).value = api.matrixX[i - 1];\n        }\n        this.jacobi(parseInt(this.state.row));\n      }\n\n    render() {\n        return(\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h1 style={{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px' }}>Jacobi Iteration Method</h1>\n                <div className=\"row\" style={{display:'flex'}}>\n                    <div className=\"col\" style = {{textAlign: 'center',fontSize:'21px'}}>\n                        \n                            \n                            {this.state.showDimentionForm && \n                                <div>\n                                    <h4>Row  : &nbsp;&nbsp;<Input size=\"large\" name=\"row\" value={this.state.row}style={{ width: 150 }}></Input></h4><br />\n                                    <h4>Column  : &nbsp;&nbsp;<Input size=\"large\" name=\"column\" value={this.state.column}style={{ width: 150 }}></Input></h4><br />\n                                    <Button id=\"dimention_button\" onClick= {\n                                        ()=>{this.createMatrix(this.state.row, this.state.column);\n                                            this.initialSchema(this.state.row)}\n                                        }  \n                                        size=\"large\"style={{color:'white',background:'#cc33ff'}}>\n                                        Submit\n                                    </Button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Button type=\"submit\"   size=\"large\"\n                                        style={{ color:'#cc33ff',background:'#ffffff'}}\n                                        onClick={() => this.dataapi()}>\n                                            Function\n                                        </Button>\n                                </div> \n                            }\n                            \n                            {this.state.showMatrixForm && \n                                <div>\n                                    <br />\n                                    <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Matrix [A]</h2><br/>{matrixA}\n                                    <h2 style = {{textAlign: 'center',fontSize:'30px'}}>Vector [B]<br/></h2>{matrixB}\n                                    <h2>Initial X<br/></h2>{matrixX}\n                                    <br />\n                                    <Button \n                                        id=\"matrix_button\"size=\"large\"\n                                        style={{width: 150 ,color:'white',background:'#cc33ff'}}\n                                        onClick={()=>this.jacobi(parseInt(this.state.row))}>\n                                        Submit\n                                    </Button>           \n                                </div>\n                            }\n                            \n                    </div>\n                    <br />              \n                    <div className=\"col\">\n                        {this.state.showOutputCard && \n                            <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{width: \"100%\", background: \"while\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                            >\n                                <Table columns={columns} bordered dataSource={dataInTable} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\", border:\"2px solid white\"}}></Table>\n                            </Card>\n                        }                          \n                    </div>\n \n                </div>\n             \n            </div>\n        );\n    }\n}\nexport default Jacobi;\n\n\n\n","import React, { Component } from 'react'\nimport {Card, Input, Button, Table} from 'antd';\n// import '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { error } from './Services';\nconst InputStyle = {\n    background: \"#ffffff\",\n    color: \"white\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], x , epsilon, output = [], dataInTable = [], count=1, matrixX = []\nvar columns = [\n    {\n      title: \"Iteration\",\n      dataIndex: \"iteration\",\n      key: \"iteration\"\n    }\n];\nclass Seidel extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm : true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.seidel = this.seidel.bind(this);\n    \n    }\n\n  \n    seidel(n) {\n        this.initMatrix();\n        x = new Array(n);\n        var xold\n        epsilon = new Array(n);\n        do {\n            xold = JSON.parse(JSON.stringify(x));\n            for (var i=0 ; i<n ; i++) {\n                var sum = 0;\n                for (var j=0 ; j<n ; j++) {\n                    if (i !== j) { //else i == j That is a divide number\n                        sum = sum + A[i][j]*x[j];\n                    }\n                }\n                x[i] = (B[i] - sum)/A[i][i]; //update x[i]\n                \n            }        \n        } while(error(x, xold)); //if true , continue next iteration\n        \n        \n        for (i=0 ; i<x.length ; i++) {\n                output.push(x[i]);\n                output.push(<br/>);\n        }\n        this.setState({\n            showOutputCard: true\n        });\n\n      \n    }\n    error(xnew, xold) {\n        for (var i=0 ; i<xnew.length ; i++) {\n            epsilon[i] = Math.abs((xnew[i]-xold[i]) / xnew[i])\n        }\n        this.appendTable(x, epsilon);\n        for (i=0 ; i<epsilon.length ; i++) {\n            if (epsilon[i] > 0.000001) {\n                return true;\n            }    \n        }\n        return false;  \n    }   \n    createMatrix(row, column) {\n        A = []\n        B = []\n        matrixA = []\n        matrixB = []\n        matrixX = []\n        x = []\n        dataInTable = []\n        for (var i=1 ; i<=row ; i++) {\n            for (var j=1 ; j<=column ; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\", \n                    backgroundColor:\"#ffffff\", \n                    marginInlineEnd: \"5%\", \n                    marginBlockEnd: \"5%\",\n                    color: \"white\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }} \n                id={\"a\"+i+\"\"+j} key={\"a\"+i+\"\"+j} placeholder={\"a\"+i+\"\"+j} />)  \n            }\n            matrixA.push(<br/>)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                backgroundColor:\"#ffffff\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"b\"+i} key={\"b\"+i} placeholder={\"b\"+i} />)\n            matrixX.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                backgroundColor:\"#ffffff\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"white\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i} />)\n                \n            \n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n        \n\n    }\n    initMatrix() {\n        for(var i=0 ; i<this.state.row ; i++) {\n            A[i] = []\n            for(var j=0 ; j<this.state.column ; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n            x.push(parseFloat(document.getElementById(\"x\"+(i+1)).value));\n        }\n    }\n    initialSchema(n) {\n        for (var i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"X\"+i,\n                dataIndex: \"x\"+i,\n                key: \"x\"+i\n            },)\n        }\n        for (i=1 ; i<=n ; i++) {\n            columns.push({\n                title: \"Error\"+i,\n                dataIndex: \"error\"+i,\n                key: \"error\"+i\n            },)\n        }\n    }\n    appendTable(x, error) {\n        var tag = ''\n        tag += '{\"iteration\": ' + count++ + ',';\n        for (var i=0 ; i<x.length ; i++) {\n            tag += '\"x'+(i+1)+'\": '+x[i].toFixed(8)+', \"error'+(i+1)+'\": ' + error[i].toFixed(8);\n            if (i !== x.length-1) {\n                tag += ','\n            }\n        }\n        tag += '}';\n        dataInTable.push(JSON.parse(tag));  \n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return(\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Gauss-Seidel Iteration Method</h2>\n                <div className=\"row\" style ={{display:'flex'}}>\n                    <div className=\"col\">\n                        <Card\n                        bordered={true}\n                        style={{ background: \"#ffffff\", borderRadius:\"15px\", color: \"#FFFFFFFF\"}}\n                        onChange={this.handleChange}\n                        >\n                            {this.state.showDimentionForm && \n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <br>\n                                    </br>\n                                    <br>\n                                    </br>\n                                    <Button id=\"dimention_button\" onClick= {\n                                        ()=>{this.createMatrix(this.state.row, this.state.column);\n                                            this.initialSchema(this.state.row)}\n                                        }  \n                                        style={{color:'white',background:'#cc33ff', fontSize: \"20px\"}}>\n                                        Submit\n                                    </Button>\n                                </div> \n                            }\n                            \n                            {this.state.showMatrixForm && \n                                <div>\n                                    <h2>Matrix [A]</h2><br/>{matrixA}\n                                    <h2>Vector [B]<br/></h2>{matrixB}\n                                    <h2>Initial X<br/></h2>{matrixX}\n                                    <Button \n                                        id=\"matrix_button\"  \n                                        style={{background: \"#cc33ff\", color: \"white\", fontSize: \"20px\"}}\n                                        onClick={()=>this.seidel(parseInt(this.state.row))}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                            \n                        </Card>                        \n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard && \n                            <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{width: \"100%\", background: \"#ffffff\", color: \"#FFFFFFFF\" }}\n                            id=\"outputCard\"\n                            >\n                                <Table columns={columns} dataSource={dataInTable} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\"}}\n                                ></Table>\n                            </Card>\n                        }                           \n                    </div>\n\n                    \n\n\n\n                   \n                </div>\n\n                \n            </div>\n        );\n    }\n}\nexport default Seidel;\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport { det, add, subtract, multiply, transpose } from 'mathjs';\n// import '../../screen.css';\nimport 'antd/dist/antd.css';\nconst InputStyle = {\n    background: \"#ffffff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], matrixX = [], x, epsilon, dataInTable = [], count = 1, output\nvar columns = [\n    {\n        title: \"Iteration\",\n        dataIndex: \"iteration\",\n        key: \"iteration\"\n    },\n    {\n        title: \"λ\",\n        dataIndex: \"lambda\",\n        key: \"lambda\"\n    },\n    {\n        title: \"{X}\",\n        dataIndex: \"X\",\n        key: \"X\"\n    },\n    {\n        title: \"Error\",\n        dataIndex: \"error\",\n        key: \"error\"\n    }\n];\nclass Gradient extends Component {\n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm: true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.conjugate_gradient = this.conjugate_gradient.bind(this);\n\n    }\n    positive_definite(dimention) {\n        var tempMatrix = []\n        for (var i = 0; i < dimention; i++) {\n            tempMatrix[i] = []\n            for (var j = 0; j < dimention; j++) {\n                tempMatrix[i][j] = A[i][j];\n            }\n        }\n        if (det(tempMatrix) <= 0) {\n            return false;\n        }\n        if (dimention !== this.state.row - 1) {\n            return this.positive_definite(++dimention);\n        }\n        return true;\n    }\n\n    conjugate_gradient() {\n        this.initMatrix();\n        if (!this.positive_definite(1)) {\n            output = \"This matrix doesn't positive definite\"\n            this.setState({\n                showOutputCard: true\n            });\n            return false;\n        }\n        //find {R0}\n        var R = subtract(multiply(A, x), B);\n        console.log(R)\n        //find D0\n        var D = multiply(R, -1);\n        console.log(D)\n        do {\n            //find λ\n            var λ = (multiply(multiply(transpose(D), R), -1)) /\n                (multiply(multiply(transpose(D), A), D))\n            console.log(λ)\n            /*------------------------------------------------------------------*/\n\n            //find new {X}\n            x = add(x, multiply(λ, D));\n            console.log(x)\n            //find new {R}\n            R = subtract(multiply(A, x), B);\n            console.log(R)\n            //find epsilon\n            epsilon = Math.sqrt(multiply(transpose(R), R)).toFixed(8);\n            this.appendTable(λ, JSON.stringify(x).split(',').join(\",\\n\"), epsilon);\n            console.log(epsilon)\n            var α = (multiply(multiply(transpose(R), A), D)) /\n                multiply(transpose(D), multiply(A, D)).toFixed(8);\n            console.log(α)\n            D = add(multiply(R, -1), multiply(α, D))\n            console.log(D)\n        } while (epsilon > 0.000001);\n        output = x\n        this.setState({\n            showOutputCard: true\n        });\n\n\n    }\n    createMatrix(row, column) {\n        A = []\n        B = []\n        matrixA = []\n        matrixB = []\n        matrixX = []\n        x = []\n        dataInTable = []\n        for (var i = 1; i <= row; i++) {\n            for (var j = 1; j <= column; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\",\n                    backgroundColor: \"#ffffff\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"#000000\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }}\n                    id={\"a\" + i + \"\" + j} key={\"a\" + i + \"\" + j} placeholder={\"a\" + i + \"\" + j} />)\n            }\n            matrixA.push(<br />)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"#ffffff\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"w#000000\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"b\" + i} key={\"b\" + i} placeholder={\"b\" + i} />)\n            matrixX.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\",\n                backgroundColor: \"white\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"#000000\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />)\n\n\n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n\n\n\n    }\n    initMatrix() {\n        for (var i = 0; i < this.state.row; i++) {\n            A[i] = []\n            for (var j = 0; j < this.state.column; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\" + (i + 1) + \"\" + (j + 1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\" + (i + 1)).value));\n            x.push(parseFloat(document.getElementById(\"x\" + (i + 1)).value));\n        }\n    }\n    appendTable(lambda, x, error) {\n        dataInTable.push({\n            iteration: count++,\n            lambda: lambda,\n            X: x,\n            error: error\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Conjugate Gradient Iteration Method</h2>\n                <div className=\"row\" style={{display:'flex'}}>\n                    <div className=\"col\">\n                        <Card\n                            bordered={true}\n                            style={{ background: \"#ffffff\", borderRadius:\"15px\", color: \"#FFFFFFFF\" }}\n                            onChange={this.handleChange}\n                        >\n\n                            {this.state.showDimentionForm &&\n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <br></br>\n                                    <br></br>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => { this.createMatrix(this.state.row, this.state.column) }\n                                    }\n                                        style={{ background: \"#cc33ff\", color: \"white\" }}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n\n                            {this.state.showMatrixForm &&\n                                <div>\n                                    <h2>Matrix [A]</h2><br />{matrixA}\n                                    <h2>Vector [B]<br /></h2>{matrixB}\n                                    <h2>Initial X<br /></h2>{matrixX}\n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"white\", color: \"#cc33ff\" }}\n                                        onClick={() => this.conjugate_gradient(parseInt(this.state.row))}>\n                                        Submit\n                                    </Button>\n                                </div>\n\n                            }\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <div>\n                                <Card\n                                    title={\"Output\"}\n                                    bordered={true}\n                                    style={{ background: \"#cc33ff\", color: \"#FFFFFFFF\" }}\n                                    onChange={this.handleChange} id=\"answerCard\">\n                                    <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{JSON.stringify(output)}</p>\n                                </Card>\n\n                            </div>\n\n                        }\n                    </div>\n                </div>\n                {/* <div className=\"row\"> */}\n                    {this.state.showOutputCard &&\n                        <div>\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ width: \"100%\", background: \"#ffffff\", color: \"#FFFFFFFF\" }}\n                                id=\"outputCard\"\n                            >\n                                <Table columns={columns} dataSource={dataInTable} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowX: \"scroll\" }}\n                                ></Table>\n                            </Card>\n\n                        </div>\n\n                    }\n                {/* </div> */}\n\n\n            </div>\n        );\n    }\n}\nexport default Gradient;\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nvar api;\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag, interpolatePoint, tempTag, fx\n\nclass Newton extends Component {\n\n    constructor() {\n        super();\n        x = []\n        y = []\n        interpolatePoint = []\n        tempTag = []\n        tableTag = []\n\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            interpolatePoint: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.newton_difference = this.newton_difference.bind(this);\n\n    }\n    // 1 เก็บ input ใน x[],y[]\n    createTableInput(n) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />);\n            y.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1]\n            });\n        }\n\n\n        this.setState({\n            showInputForm: true,\n            showTableInput: true,\n        })\n    }\n    // 1 เก็บ input ใน tempTag[]\n    createInterpolatePointInput() {\n        for (var i = 1; i <= this.state.interpolatePoint; i++) {\n            tempTag.push(<Input style={{\n                width: \"10%\",\n                height: \"40%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"p\" + i} key={\"p\" + i} placeholder={\"p\" + i} />)\n        }\n    }\n\n    initialValue() {\n        x = []\n        y = []\n        for (var i = 1; i <= this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n        for (i = 1; i <= this.state.interpolatePoint; i++) {\n            interpolatePoint[i] = parseInt(document.getElementById(\"p\" + i).value);\n        }\n    }\n\n    C(n) {\n        if (n === 1) {\n            return 0\n        }\n        else {\n            return ((y[interpolatePoint[n]] - y[interpolatePoint[n - 1]]) / (x[interpolatePoint[n]] - x[interpolatePoint[n - 1]])) - this.C(n - 1)\n        }\n\n    }\n    findX(n, X) {\n        if (n < 1) {\n            return 1\n        }\n        else {\n            console.log(X + \" - \" + x[interpolatePoint[n]])\n            return (X - x[interpolatePoint[n]]) * this.findX(n - 1, X)\n        }\n    }\n    // ใช้  initialValue() , C(n) , findX(n, X)\n    newton_difference(n, X) {\n        this.initialValue() //\n        fx = y[1]\n        if (n === 2) { //if linear interpolate\n            fx += ((y[interpolatePoint[2]] - y[interpolatePoint[1]]) / (x[interpolatePoint[2]] - x[interpolatePoint[1]])) * (X - x[interpolatePoint[1]])\n        }\n        else {\n            for (var i = 2; i <= n; i++) {\n                fx += (this.C(i) / (x[interpolatePoint[i]] - x[interpolatePoint[1]])) * this.findX(i - 1, X)\n            }\n        }\n\n        this.setState({\n            showOutputCard: true\n        })\n\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/newtondivide\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n            nPoints: api.numberpoint,\n            X: api.xfind,\n            interpolatePoint: api.interpolateinput\n        });\n        x = []\n        y = []\n        interpolatePoint = []\n        tempTag = []\n        tableTag = []\n        await this.createInterpolatePointInput();\n        await this.createTableInput(api.numberpoint);\n        for (let i = 1; i <= api.numberpoint; i++) {\n            document.getElementById(\"x\" + i ).value = api.matrixX[i - 1];\n            document.getElementById(\"y\" + i).value = api.matrixY[i - 1];\n        }\n        for (let i = 1; i <= api.interpolateinput; i++) {\n            document.getElementById(\"p\" + i ).value = api.interpolatePoint[i - 1];\n        }\n        this.newton_difference(parseInt(this.state.interpolatePoint), parseFloat(this.state.X));\n      }\n    \n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"100px\"}}>\n                <h1 style = {{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Newton's Divided Differences Interpolation</h1>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        {/* 1  nPoints  X  interpolatePoint*/}\n                            {this.state.showInputForm &&\n                                \n                                    <form style = {{textAlign: 'left',fontSize:'21px'}} id=\"inputCard\">\n                                        <h4>Number of points(n)  : &nbsp;&nbsp;               \n                                            <Input size=\"large\" name =\"nPoints\" value={this.state.nPoints}style={{ width: 300 }}\n                                            onChange={this.handleChange}\n                                            />\n                                        </h4>\n                                        <br></br>\n                                        <h4>X : &nbsp;&nbsp;\n                                            <Input size=\"large\" name =\"X\" value={this.state.X}style={{ width: 200 }}\n                                            onChange={this.handleChange}\n                                            />\n                                        </h4>\n                                        <br></br>\n                                        <h4>interpolatePoint : &nbsp;&nbsp;\n                                            <Input size=\"large\" name = \"interpolatePoint\"value={this.state.interpolatePoint}style={{ width: 200 }}\n                                            onChange={this.handleChange}\n                                            />\n                                        </h4>\n                                        <br></br>\n                                        \n                                        <Button type=\"submit\"   size=\"large\"\n                                        style={{ color:'white',background:'#cc33ff'}}\n                                        onClick={() => {this.createTableInput(parseInt(this.state.nPoints));this.createInterpolatePointInput()}}>\n                                            Submit\n                                        </Button>\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Button type=\"submit\"   size=\"large\"\n                                        style={{ color:'#cc33ff',background:'#ffffff'}}\n                                        onClick={() => this.dataapi()}>\n                                            Function\n                                        </Button><br />\n                                        </form>\n                            }\n                            {/* 2  tempTag  tableTag*/}\n                            {this.state.showTableInput &&\n                                <div>\n                                    <br />\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"black\", overflowY: \"scroll\", minWidth: 80, maxHeight: 300 }}></Table>\n                                    <br /><h2>InterpolatePoint {parseInt(this.state.interpolatePoint) === 2 ? \"(Linear)\" :\n                                        parseInt(this.state.interpolatePoint) === 3 ? \"(Quadratic)\" :\n                                            \"(Polynomial)\"}</h2>\n                                            \n                                            {tempTag}\n                                    <Button\n                                        id=\"matrix_button\"size=\"large\"\n                                        style={{ width: 150 ,color:'#cc33ff',background:'#ffffff' }}\n                                        onClick={() => this.newton_difference(parseInt(this.state.interpolatePoint), parseFloat(this.state.X))}>\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n                            \n                        \n                    </div>\n                    \n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{  background: \"while\", color: \"black\" }}\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{fx}</p>\n\n                            </Card> \n                        }\n                    </div>\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\nexport default Newton;","import React, { Component } from 'react'\nimport {Card, Input, Button, Table} from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\n\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n      title: \"No.\",\n      dataIndex: \"no\",\n      key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag,  interpolatePoint, tempTag, fx\n\nclass Lagrange extends Component {\n    \n    constructor() {\n        super();\n        x = []\n        y = []\n        interpolatePoint = []\n        tempTag = []\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            interpolatePoint: 0,\n            showInputForm : true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.lagrange = this.lagrange.bind(this);\n    \n    }  \n    // 1 สร้าง input เก็บ input ใน x[],y[]\n    createTableInput(n) {\n        for (var i=1 ; i<=n ; i++) {\n            x.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\", \n                // backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n            id={\"x\"+i} key={\"x\"+i} placeholder={\"x\"+i}/>);\n            y.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\", \n                // backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"y\"+i} key={\"y\"+i} placeholder={\"y\"+i}/>);   \n            tableTag.push({\n                no: i,\n                x: x[i-1],\n                y: y[i-1]\n            });\n        }\n\n\n        this.setState({\n            showInputForm: true,\n            showTableInput: true,\n        })\n    }\n    // 1 เก็บ input ใน tempTag[]\n    createInterpolatePointInput(){\n        for (var i=1 ; i<=this.state.interpolatePoint ; i++) {\n            tempTag.push(<Input style={{\n                width: \"10%\",\n                height: \"40%\", \n                // backgroundColor:\"black\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"p\"+i} key={\"p\"+i} placeholder={\"p\"+i} />)\n        }\n    }\n    initialValue() {\n        x = []\n        y = []\n        for (var i=1 ; i<=this.state.nPoints ; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\"+i).value);\n            y[i] = parseFloat(document.getElementById(\"y\"+i).value);\n        }\n        for (i=1 ; i<=this.state.interpolatePoint ; i++) {\n            interpolatePoint[i] = parseFloat(document.getElementById(\"p\"+i).value);\n        }\n    }\n\n    L(X, index, n) {\n        var numerate = 1/*ตัวเศษ*/, denominate = 1/*ตัวส่วน*/;\n        for (var i=1 ; i<=n ; i++) {\n            if (i !== index) {\n                numerate *= x[i]-X;\n                denominate *= x[i] - x[index];\n            }\n        } \n        console.log(numerate/denominate)\n        return parseFloat(numerate/denominate);\n    }\n    // ใช้  L(X, index, n) , initialValue()\n    lagrange(n, X) {\n        fx = 0\n        this.initialValue()\n        for (var i=1 ; i<=n ; i++) {\n            fx += this.L(X, i, n)*y[i];\n        }\n        this.setState({\n            showOutputCard: true\n        })\n\n    } \n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/lagrange\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n            nPoints: api.nPoints,\n            X: api.X,\n            interpolatePoint: api.interpolateinput,\n        });\n        x = []\n        y = []\n        interpolatePoint = []\n        tempTag = []\n        tableTag = []\n        await this.createInterpolatePointInput();\n        await this.createTableInput(api.nPoints);\n        for (let i = 1; i <= api.nPoints; i++) {\n          document.getElementById(\"x\" + i ).value = api.arrayX[i - 1];\n          document.getElementById(\"y\" + i).value = api.arrayY[i - 1];\n        }\n        for (let i = 1; i <= api.interpolateinput; i++) {\n          document.getElementById(\"p\" + i ).value = api.interpolatePoint[i - 1];\n        }\n        this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X));\n      }\n\n    render() {\n        return(\n            <div style={{  background: \"#FFFF\", padding: \"100px\"  }}>\n                <h1 style={{textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Lagrange Interpolation</h1>\n                <div className=\"row\">\n                    <div className=\"col\" style = {{textAlign: 'left',fontSize:'21px'}}onChange={this.handleChange}>\n                       \n                            {this.state.showInputForm && \n                                <div>\n                                    <h4>Number of points(n)  : &nbsp;&nbsp;<Input size=\"large\" name=\"nPoints\" value={this.state.nPoints}style={{ width: 150 }}></Input></h4><br />\n                                    <h4>X  : &nbsp;&nbsp;<Input size=\"large\" name=\"X\" value={this.state.X}style={{ width: 150 }}></Input></h4><br />\n                                    <h4>interpolatePoint  : &nbsp;&nbsp;<Input size=\"large\" name=\"interpolatePoint\"value={this.state.interpolatePoint} style={{ width: 150 }}></Input></h4><br />\n                                    <Button id=\"dimention_button\"size=\"large\" onClick= {\n                                        ()=>{this.createTableInput(parseInt(this.state.nPoints));\n                                        this.createInterpolatePointInput()}\n                                    }  \n                                        style={{ color:'#cc33ff',background:'#ffffff'}}>\n                                        Submit\n                                    </Button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Button type=\"submit\"   size=\"large\"\n                                        style={{ color:'white',background:'#cc33ff'}}\n                                        onClick={() => this.dataapi()}>\n                                            Function\n                                        </Button>\n                                </div> \n                            }\n                            {this.state.showTableInput && \n                                <div>\n                                    <br />\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{fontWeight: \"bold\", fontSize: \"18px\", color: \"white\" , overflowY: \"scroll\", minWidth: 120, maxHeight: 300}}></Table>\n                                    <br/><h2>interpolatePoint {parseInt(this.state.interpolatePoint) === 2 ? \"(Linear)\": \n                                                            parseInt(this.state.interpolatePoint) === 3 ? \"(Quadratic)\" :\n                                                            \"(Polynomial)\"}</h2>{tempTag}\n                                                            <br />\n                                    <Button \n                                        id=\"matrix_button\"size=\"large\"\n                                        style={{width: 150 ,color:'white',background:'#cc33ff'}}\n                                        onClick={()=>this.lagrange(parseInt(this.state.interpolatePoint), parseFloat(this.state.X))}>\n                                        Submit\n                                    </Button>\n                                    \n                                </div>\n                            }\n                     \n                    </div>\n                    <br />\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{  background: \"white \", color: \"black\" }}\n                            >\n                                <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{fx}</p>\n                            </Card>                        \n                        }                        \n                    </div>     \n                </div>\n\n                \n            </div>\n        );\n    }\n}\nexport default Lagrange;","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#ffffff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x = [], y = [], tableTag = [], answer\n\nclass Spline extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n\n    createTableInput(n) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />);\n            y.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1]\n            });\n        }\n\n\n        this.setState({\n            showInputForm: true,\n            showTableInput: true,\n        })\n    }\n    initialValue(X) {\n        x = []\n        y = []\n        for (var i = 0; i < this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\" + (i + 1)).value);\n            y[i] = parseFloat(document.getElementById(\"y\" + (i + 1)).value);\n        }\n        answer = this.spline(X, x, y)\n    }\n    spline(x, xs, ys) {\n        var ks = xs.map(function () { return 0 })\n        ks = this.getNaturalKs(xs, ys, ks)\n        var i = 1;\n        while (xs[i] < x) i++;\n        var t = (x - xs[i - 1]) / (xs[i] - xs[i - 1]);\n        var a = ks[i - 1] * (xs[i] - xs[i - 1]) - (ys[i] - ys[i - 1]);\n        var b = -ks[i] * (xs[i] - xs[i - 1]) + (ys[i] - ys[i - 1]);\n        var q = (1 - t) * ys[i - 1] + t * ys[i] + t * (1 - t) * (a * (1 - t) + b * t);\n        console.log(q)\n        this.setState({\n            showOutputCard: true\n        })\n\n        return q;\n    }\n\n    getNaturalKs(xs, ys, ks) {\n        var n = xs.length - 1;\n        var A = this.zerosMat(n + 1, n + 2);\n\n        for (var i = 1; i < n; i++)  // rows\n        {\n            A[i][i - 1] = 1 / (xs[i] - xs[i - 1]);\n            A[i][i] = 2 * (1 / (xs[i] - xs[i - 1]) + 1 / (xs[i + 1] - xs[i]));\n            A[i][i + 1] = 1 / (xs[i + 1] - xs[i]);\n            A[i][n + 1] = 3 * ((ys[i] - ys[i - 1]) / ((xs[i] - xs[i - 1]) * (xs[i] - xs[i - 1])) + (ys[i + 1] - ys[i]) / ((xs[i + 1] - xs[i]) * (xs[i + 1] - xs[i])));\n        }\n\n        A[0][0] = 2 / (xs[1] - xs[0]);\n        A[0][1] = 1 / (xs[1] - xs[0]);\n        A[0][n + 1] = 3 * (ys[1] - ys[0]) / ((xs[1] - xs[0]) * (xs[1] - xs[0]));\n\n        A[n][n - 1] = 1 / (xs[n] - xs[n - 1]);\n        A[n][n] = 2 / (xs[n] - xs[n - 1]);\n        A[n][n + 1] = 3 * (ys[n] - ys[n - 1]) / ((xs[n] - xs[n - 1]) * (xs[n] - xs[n - 1]));\n\n        return this.solve(A, ks);\n    }\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/spline\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n            nPoints: api.numberpoint,\n            X: api.xfind\n        });\n        await this.createTableInput(api.numberpoint);\n        for (let i = 1; i <= api.numberpoint; i++) {\n            document.getElementById(\"x\" + i ).value = api.arrayX[i - 1];\n            document.getElementById(\"y\" + i).value = api.arrayY[i - 1];\n        }\n        await this.initialValue(parseFloat(api.xfind));\n        await this.initialValue(parseFloat(api.xfind));\n        \n      }\n\n    solve(A, ks) {\n        var m = A.length;\n        for (var k = 0; k < m; k++)  // column\n        {\n            // pivot for column\n            var i_max = 0; var vali = Number.NEGATIVE_INFINITY;\n            for (var i = k; i < m; i++) if (A[i][k] > vali) { i_max = i; vali = A[i][k]; }\n            this.swapRows(A, k, i_max);\n\n            // for all rows below pivot\n            for (i = k + 1; i < m; i++) {\n                for (var j = k + 1; j < m + 1; j++)\n                    A[i][j] = A[i][j] - A[k][j] * (A[i][k] / A[k][k]);\n                A[i][k] = 0;\n            }\n        }\n        for (i = m - 1; i >= 0; i--) // rows = columns\n        {\n            var v = A[i][m] / A[i][i];\n            ks[i] = v;\n            for (j = i - 1; j >= 0; j--) // rows\n            {\n                A[j][m] -= A[j][i] * v;\n                A[j][i] = 0;\n            }\n        }\n        console.log(A)\n        return ks;\n    }\n\n    zerosMat(r, c) {\n        var A = [];\n        for (var i = 0; i < r; i++) {\n            A.push([]);\n            for (var j = 0; j < c; j++) A[i].push(0);\n        }\n        return A;\n    }\n\n    swapRows(m, k, l) {\n        var p = m[k]; m[k] = m[l]; m[l] = p;\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"100px\" }}>\n                <h1 style={{ textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px' }}>Spline Interpolation</h1>\n                <div className=\"row\">\n                    <div className=\"col\"onChange={this.handleChange} style = {{textAlign: 'center',fontSize:'21px'}}>\n                        \n                            {this.state.showInputForm &&\n                                <div>\n                                    <h4>Number of points(n) : &nbsp;&nbsp;<Input size=\"large\" name=\"nPoints\" value={this.state.nPoints}style={{width: 200 }}></Input></h4><br />\n                                    <h4>X : &nbsp;&nbsp;<Input size=\"large\" name=\"X\"value={this.state.X} style={{width: 200 }}></Input></h4><br />\n                                    <Button id=\"dimention_button\" size=\"large\"onClick={\n                                        () => { this.createTableInput(parseInt(this.state.nPoints)) }\n                                    }\n                                        style={{ color:'#cc33ff',background:'#ffffff'}}>\n                                        Submit<br></br>\n                                    </Button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Button type=\"submit\"   size=\"large\"\n                                        style={{color:'white',background:'#cc33ff'}}\n                                        onClick={() => this.dataapi()}>\n                                            Function\n                                        </Button>\n                                </div>\n                            }\n                            \n                            {this.state.showTableInput &&\n                                <div>\n                                    <br />\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}>\n\n                                    </Table><br />\n                                    <Button\n                                        id=\"matrix_button\"\n                                        size=\"large\"style={{ width: 150 ,background: \"#f7c602\", color: \"black\" }}\n                                        onClick={() => this.initialValue(parseFloat(this.state.X))}>\n                                        Submit\n                                </Button>\n                                </div>}\n\n\n                    </div>\n                    <br />\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ background: \"white\", color: \"black\", float: \"inline-start\" }}\n                                id=\"outputCard\"\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>X = {answer}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Spline;\n\n\n\n","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { inv, multiply, sum } from 'mathjs';\nimport axios from 'axios';\nvar api;\n\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag, answer\n\nclass Linear extends Component {\n\n    constructor() {\n        super();\n        x = []\n        y = []\n\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            // m: 0,\n            interpolatePoint: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n\n    }\n    // 1 สร้าง input เก็บ input ใน x[],y[]\n    createTableInput(n) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n                justifyContent: \"center\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />);\n            y.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1]\n            })\n\n        }\n\n        this.setState({\n            showInputForm: true,\n            showTableInput: true\n        })\n    }\n    // 2  ประมวลผลต่อ\n    initialValue(n) {\n        x = new Array(n + 1)\n        y = []\n        for (var i = 1; i <= n; i++) {\n            x[i] = parseInt(document.getElementById(\"x\" + i).value);\n\n        }\n        for (i = 1; i <= n; i++) {\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n    }\n    // 2 ประมวลผลต่อ\n    linear(n) {\n        var matrixX = [2], matrixY = [2], exponent = 0\n        for (var i = 0; i < 2; i++) {\n            matrixX[i] = []\n            for (var j = 0; j < 2; j++) {\n                if (i === 0 && j === 0) {\n                    matrixX[i][j] = n\n                }\n                else if (i === 0 && j === 1) {\n                    matrixX[i][j] = this.summation(x, 1)\n                }\n                else {\n                    matrixX[i][j] = this.summation(x, exponent + j)\n                }\n            }\n            exponent++\n        }\n        matrixY[0] = sum(y)\n        matrixY[1] = this.summationOfTwo(x, y)\n        matrixX = inv(matrixX)\n        answer = JSON.stringify(multiply(matrixX, matrixY))\n\n        this.setState({\n            showOutputCard: true\n        })\n    }\n\n    summation(A, exponent) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += Math.pow(A[i], exponent)\n        }\n        return sum\n    }\n    summationOfTwo(A, B) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += A[i] * B[i]\n        }\n        return sum\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/linear\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n            nPoints:api.numberpoint\n        })\n        await this.createTableInput(api.numberpoint)\n        for (let i = 1; i <= api.numberpoint; i++) {\n          document.getElementById(\"x\" + i).value = api.arrayX[i - 1];\n          document.getElementById(\"y\" + i).value = api.arrayY[i - 1];\n        }\n        this.initialValue(parseInt(this.state.nPoints));\n        this.linear(parseInt(this.state.nPoints));\n      }\n\n    render() {\n        return (\n            <div style={{  background: \"#FFFF\", padding: \"100px\"  }}>\n                <h2 style={{ textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px' }}>Linear Regression</h2>\n                <div className=\"row\">\n                    <div className=\"col\" onChange={this.handleChange} style = {{textAlign: 'center',fontSize:'21px'}}>\n                        \n                            {this.state.showInputForm &&\n                                <div>\n                                    <h4>Number of points(n) : &nbsp;&nbsp;<Input  name=\"nPoints\" value={this.state.nPoints}size=\"large\"style={{ width: 300 }}></Input></h4><br />\n                                    <Button id=\"dimention_button\" size=\"large\"onClick={\n                                        () => this.createTableInput(parseInt(this.state.nPoints))}\n                                        style={{ color:'#cc33ff',background:'#ffffff' }}>\n                                        Submit<br></br>\n                                    </Button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Button type=\"submit\"   size=\"large\"\n                                        style={{ color:'white',background:'#cc33ff'}}\n                                        onClick={() => this.dataapi()}>\n                                            Function\n                                        </Button>\n                                </div>\n                            }\n\n                            {this.state.showTableInput &&\n                                <div> <br />\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}></Table><br />\n                                    <Button\n                                        id=\"matrix_button\"size=\"large\"\n                                        style={{ width: 150 ,color:'white',background:'#cc33ff' }}\n                                        onClick={() => {this.initialValue(parseInt(this.state.nPoints));this.linear(parseInt(this.state.nPoints))}}\n                                    >\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n                    </div>\n                    <br />\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{  background: \"white \", color: \"black\" }}\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>x = {JSON.stringify(answer)}</p>\n                            </Card>\n                        }\n                    </div>\n\n\n\n\n\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\nexport default Linear;","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { lusolve, squeeze, sum } from 'mathjs';\nimport axios from 'axios';\nvar api;\nconst InputStyle = {\n    background: \"#1890ff\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag, regressionMatrixX, regressionMatrixY, matrixA, matrixB, answer\n\nclass Polynomial extends Component {\n\n    constructor() {\n        super();\n        x = []\n        y = []\n\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            m: 0,\n            interpolatePoint: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n\n    }\n\n    createTableInput(n, m) {\n        for (var i = 1; i <= n; i++) {\n            x.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                // backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\",\n                justifyContent: \"center\"\n            }}\n                id={\"x\" + i} key={\"x\" + i} placeholder={\"x\" + i} />);\n            y.push(<Input style={{\n                width: \"50%\",\n                height: \"40%\",\n                // backgroundColor: \"black\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1]\n            })\n\n        }\n        regressionMatrixX = new Array(m + 1)\n        regressionMatrixY = new Array(m + 1)\n        for (i = 1; i <= m + 1; i++) {\n            regressionMatrixX[i] = []\n            for (var j = 1; j <= m + 1; j++) {\n                regressionMatrixX[i][j] = []\n            }\n        }\n\n        this.setState({\n            showInputForm: true,\n            showTableInput: true\n        })\n    }\n\n    initialValue(n, m) {\n        x = new Array(m + 1)\n        y = []\n        for (var i = 1; i <= n; i++) {\n            x[i] = parseFloat(document.getElementById(\"x\" + i).value);\n\n        }\n        for (i = 1; i <= n; i++) {\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n    }\n\n    polynomial(n, m) {\n        var exponent = 1\n        //find matrix X\n        for (var i = 1; i <= m + 1; i++) {\n            for (var j = 1; j <= m + 1; j++) {\n                if (i === 1 && j === 1) {\n                    regressionMatrixX[i][j] = n\n                    continue\n                }\n                regressionMatrixX[i][j] = this.summation(x, exponent)\n                exponent++\n\n            }\n            exponent = i\n        }\n        //find matrix Y\n        regressionMatrixY[1] = sum(y)\n        for (i = 2; i <= m + 1; i++) {\n            regressionMatrixY[i] = this.summationOfTwo(x, y, i - 1)\n        }\n        console.log(regressionMatrixY)\n        this.findX(m)\n\n    }\n\n    findX(m) {\n        matrixA = new Array(m + 1)\n        matrixB = new Array(m + 1)\n        for (var i = 0; i < m + 1; i++) {\n            matrixA[i] = []\n            for (var j = 0; j < m + 1; j++) {\n                matrixA[i][j] = regressionMatrixX[i + 1][j + 1]\n            }\n            matrixB[i] = regressionMatrixY[i + 1]\n        }\n        answer = squeeze(lusolve(matrixA, matrixB))\n        console.log(answer)\n        this.setState({\n            showOutputCard: true\n        })\n    }\n\n    async dataapi() {\n        await axios({\n          method: \"get\",\n          url: \"http://localhost:5000/database/polynomial\",\n        }).then((response) => {\n          console.log(\"response: \", response.data);\n          api = response.data;\n        });\n        await this.setState({\n            m:api.ordernumber,\n            nPoints:api.numberpoint\n        })\n        \n        await this.createTableInput(this.state.nPoints, this.state.m);\n        await this.initialValue(parseInt(this.state.nPoints), parseInt(this.state.m));\n        await this.polynomial(parseInt(this.state.nPoints), parseInt(this.state.m));\n        for (let i = 1; i <= api.numberpoint; i++) {\n          document.getElementById(\"x\" + i).value = api.arrayX[i - 1];\n          document.getElementById(\"y\" + i).value = api.arrayY[i - 1];\n        }\n        this.initialValue(parseInt(this.state.nPoints), parseInt(this.state.m));\n        this.polynomial(parseInt(this.state.nPoints), parseInt(this.state.m));\n      }\n      \n\n    summation(A, exponent) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += Math.pow(A[i], exponent)\n        }\n        return sum\n    }\n\n    summationOfTwo(x, y, exponent) {\n        var sum = 0\n        for (var i = 1; i < y.length; i++) {\n            sum += Math.pow(x[i], exponent) * y[i]\n        }\n        return sum\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"100px\"  }}>\n                <h1 style={{ textAlign: 'left',fontSize:'30px',background:'#cc33ff',color:'white',border:'25px'}}>Polynomial Regression</h1>\n                <div className=\"row\">\n                    <div className=\"col\"onChange={this.handleChange}style = {{textAlign: 'center',fontSize:'21px'}}>\n                        \n                            {this.state.showInputForm &&\n                                <div>\n                                    <h4>Number of points(n) : &nbsp;&nbsp;<Input size=\"large\" name=\"nPoints\" value={this.state.nPoints} style={{ width: 300 }}></Input></h4><br />\n                                    <h4>Order(m) : &nbsp;&nbsp;<Input size=\"large\" name=\"m\" value={this.state.m} style={ { width: 300 }}></Input></h4><br />\n                                    <Button id=\"dimention_button\" size=\"large\"onClick={\n                                        () => this.createTableInput(parseInt(this.state.nPoints), parseInt(this.state.m))}\n                                        style={{  color:'#cc33ff',background:'#ffffff'}}>\n                                        Submit<br></br>\n                                    </Button>\n                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        <Button type=\"submit\"   size=\"large\"\n                                        style={{ color:'white',background:'#cc33ff'}}\n                                        onClick={() => this.dataapi()}>\n                                            Function\n                                        </Button>\n                                </div>\n                            }\n\n                            {this.state.showTableInput &&\n                                <div>\n                                    <br />\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}></Table><br />\n                                    <Button\n                                        id=\"matrix_button\"size=\"large\"\n                                        style={{width: 150 , color:'white',background:'#cc33ff' }}\n                                        onClick={() => {\n                                            this.initialValue(parseInt(this.state.nPoints), parseInt(this.state.m));\n                                            this.polynomial(parseInt(this.state.nPoints), parseInt(this.state.m))\n                                        }}\n                                    >\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n                    </div>\n                    <br />\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{  background: \"white\", color: \"black\" }}\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>x = {JSON.stringify(answer).replace(',', '\\n')}</p>\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Polynomial;","import React, { Component } from 'react'\nimport { Card, Input, Button, Table } from 'antd';\n// import '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { lusolve, round, squeeze } from 'mathjs';\n\nconst InputStyle = {\n    background: \"#ffffff\",\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\"\n\n};\nvar columns = [\n    {\n        title: \"No.\",\n        dataIndex: \"no\",\n        key: \"no\"\n    },\n    {\n        title: \"X\",\n        dataIndex: \"x\",\n        key: \"x\"\n    },\n    {\n        title: \"Y\",\n        dataIndex: \"y\",\n        key: \"y\"\n    }\n];\nvar x, y, tableTag, fx, regressionMatrixX, regressionMatrixY, matrixA, matrixB, answer\n\nclass MultipleLinear extends Component {\n\n    constructor() {\n        super();\n        x = []\n        y = []\n\n        tableTag = []\n        this.state = {\n            nPoints: 0,\n            X: 0,\n            interpolatePoint: 0,\n            showInputForm: true,\n            showTableInput: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n\n\n    }\n    createTableInput(n, X) {\n        for (var i = 1; i <= n; i++) {\n            x[i] = []\n            for (var j = 1; j <= X; j++) {\n                x[i].push(<Input style={{\n                    width: \"70%\",\n                    height: \"50%\",\n                    backgroundColor: \"#ffffff\",\n                    marginInlineEnd: \"5%\",\n                    marginBlockEnd: \"5%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\",\n                    justifyContent: \"center\",\n                }}\n                    id={\"x\" + i + \"\" + j} key={\"x\" + i + \"\" + j} placeholder={\"x\" + i + \"\" + j} />);\n            }\n            y.push(<Input style={{\n                width: \"100%\",\n                height: \"50%\",\n                backgroundColor: \"#ffffff\",\n                marginInlineEnd: \"5%\",\n                marginBlockEnd: \"5%\",\n                color: \"#000000\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }}\n                id={\"y\" + i} key={\"y\" + i} placeholder={\"y\" + i} />);\n            tableTag.push({\n                no: i,\n                x: x[i],\n                y: y[i - 1]\n            })\n\n        }\n        regressionMatrixX = new Array(X + 1)\n        regressionMatrixY = new Array(X + 1)\n        for (i = 1; i <= X + 1; i++) {\n            regressionMatrixX[i] = []\n            for (j = 1; j <= X + 1; j++) {\n                regressionMatrixX[i][j] = []\n            }\n        }\n\n        this.setState({\n            showInputForm: false,\n            showTableInput: true,\n        })\n    }\n    initialValue(n, X) {\n        x = new Array(X + 1)\n        y = []\n        for (var i = 1; i <= X; i++) {\n            x[i] = []\n            for (var j = 1; j <= n; j++) {\n                x[i][j] = parseInt(document.getElementById(\"x\" + j + \"\" + i).value);\n            }\n        }\n        for (i = 1; i <= n; i++) {\n            y[i] = parseFloat(document.getElementById(\"y\" + i).value);\n        }\n    }\n    multipleLinear(n, X) {\n        for (var i = 1; i <= X + 1; i++) {\n            for (var j = i; j <= X + 1; j++) {\n                if (i === 1) {\n                    if (j === 1) {\n                        regressionMatrixX[i][j] = n\n                        regressionMatrixY[j] = this.summation(y)\n                    }\n                    else {\n                        regressionMatrixX[i][j] = regressionMatrixX[j][i] = this.summation(x[j - 1])\n                        regressionMatrixY[j] = this.summationOfTwo(x[j - 1], y)\n                    }\n\n\n                }\n                else {\n                    regressionMatrixX[i][j] = regressionMatrixX[j][i] = this.summationOfTwo(x[i - 1], x[j - 1])\n                }\n            }\n        }\n        this.findX(X)\n    }\n    findX(X) {\n        matrixA = new Array(X + 1)\n        matrixB = new Array(X + 1)\n        for (var i = 0; i < X + 1; i++) {\n            matrixA[i] = []\n            for (var j = 0; j < X + 1; j++) {\n                matrixA[i][j] = regressionMatrixX[i + 1][j + 1]\n            }\n            matrixB[i] = regressionMatrixY[i + 1]\n        }\n        answer = squeeze(round(lusolve(matrixA, matrixB)))\n        console.log(answer)\n    }\n    summation(A) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += A[i]\n        }\n        return sum\n    }\n    summationOfTwo(A, B) {\n        var sum = 0\n        for (var i = 1; i < A.length; i++) {\n            sum += A[i] * B[i]\n        }\n        return sum\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return (\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{ color: \"black\", fontWeight: \"bold\" }}>Multiple Linear Regression</h2>\n                <div className=\"row\" style={{}}>\n                    <div className=\"col\" style={{display:'flex'}}>\n                        <Card\n                            bordered={true}\n                            style={{ background: \"white\", borderRadius:\"15px\", color: \"#000000\" }}\n                            onChange={this.handleChange}\n                        >\n                            {this.state.showInputForm &&\n                                <div>\n                                    <h2>Number of X</h2><Input size=\"large\" name=\"X\" style={InputStyle}></Input>\n                                    <h2>Number of points(n)</h2><Input size=\"large\" name=\"nPoints\" style={InputStyle}></Input>\n                                    <br></br>\n                                    <br></br>\n                                    <Button id=\"dimention_button\" onClick={\n                                        () => this.createTableInput(parseInt(this.state.nPoints), parseInt(this.state.X))}\n                                        style={{ background: \"#cc33ff\", color: \"white\", fontSize: \"20px\" }}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div>\n                            }\n                            {this.state.showTableInput &&\n                                <div>\n                                    <Table columns={columns} dataSource={tableTag} pagination={false} bordered={true} bodyStyle={{ fontWeight: \"bold\", fontSize: \"18px\", color: \"white\", overflowY: \"scroll\", minWidth: 120, maxHeight: 300 }}></Table>\n                                    <Button\n                                        id=\"matrix_button\"\n                                        style={{ background: \"#cc33ff\", color: \"white\", fontSize: \"20px\"}}\n                                        onClick={() => {\n                                            this.initialValue(parseInt(this.state.nPoints), parseInt(this.state.X));\n                                            this.multipleLinear(parseInt(this.state.nPoints), parseInt(this.state.X))\n                                        }}\n                                    >\n                                        Submit\n                                </Button>\n                                </div>\n                            }\n\n                        </Card>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                                title={\"Output\"}\n                                bordered={true}\n                                style={{ border: \"2px solid black\", background: \"#ffffff none repeat scroll 0% 0%\", color: \"white\" }}\n                            >\n                                <p style={{ fontSize: \"24px\", fontWeight: \"bold\" }}>{fx}</p>\n\n                            </Card>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default MultipleLinear;","import { compile, derivative } from 'mathjs';\nvar Algebrite = require('algebrite');\n\nconst func = (fx, X) => {\n    var expr = compile(fx); // f(x)\n    let scope = { x: parseFloat(X) }; //f(x) ; x=input\n    return expr.evaluate(scope);\n}\nconst funcDiff = (fx, X) => {\n    var expr = derivative(fx, 'x');\n    let scope = {x:parseFloat(X)};\n    return expr.evaluate(scope); \n}\n\nconst funcDiffDegreeN = (fx, X, degree) => {\n    var temp = fx, expr;\n    for (var i=1 ; i<=degree ; i++) {\n        temp = derivative(temp, 'x')\n        expr = temp\n    }\n    \n    let scope = {x:parseFloat(X)}\n    return expr.evaluate(scope)\n}\nconst error = (xnew, xold) => {\n    return Math.abs((xnew - xold) / xnew);\n}\nconst exactIntegrate = (fx, a, b) => {\n    var expr = compile(Algebrite.integral(Algebrite.eval(fx)).toString())\n    return expr.evaluate({x:b}) - expr.evaluate({x:a})\n\n}\nexport { func, funcDiff, funcDiffDegreeN, error, exactIntegrate };","import React, { Component } from 'react'\nimport {Card, Input, Button} from 'antd';\n// import '../../screen.css';\nimport 'antd/dist/antd.css';\nimport { format } from 'mathjs';\nconst InputStyle = {\n    background: \"#ffffff\",\n    color: \"white\", \n    fontWeight: \"bold\", \n    fontSize: \"24px\"\n\n};\n\nvar A = [], B = [], matrixA = [], matrixB = [], output = []\nclass Cholesky extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            row: 0,\n            column: 0,\n            showDimentionForm : true,\n            showMatrixForm: false,\n            showOutputCard: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.cholesky = this.cholesky.bind(this)\n    \n    }\n\n    cholesky(n) {\n        this.initMatrix();\n        var  x  = new Array(n);\n        var  y  = new Array(n)\n\n        if (matrixA[0][0] === 0) {\n            for (var i=0 ; i<n ; i++) {\n                var temp = A[0][i];\n                matrixA[0][i] = B[i][i];\n                matrixB[0][i] = temp;\n            }\n        }\n        var matrixL = new Array(n);\n        for(i=0;i<n;i++){\n            matrixL[i]  = new Array(n); \n            for(var j=0;j<n;j++){\n                matrixL[i][j] = 0;\n            }\n            x[i] = 0;\n            y[i] = 0;\n        }\n        matrixL[0][0] = Math.sqrt(matrixA[0][0]);\n        for(var k=1;k<n;k++){\n\n            for(i=0;i<k;i++){\n                var sum = 0;\n                if(i!==0){\n                    for(j=0;j<i;j++){\n                        sum += matrixL[i][j]*matrixL[k][j];\n                        //console.log(sum);\n                    }\n                }\n                matrixL[k][i]= (matrixA[i][k]-sum)/matrixL[i][i];//ได้ค่า L ที่ไม่ใช่แนวทะแยง\n            }\n            sum = 0;\n            for(j=0;j<k;j++){\n                sum += matrixL[k][j]*matrixL[k][j];\n            }\n            matrixL[k][k] = Math.sqrt(matrixA[k][k]-sum);\n        }\n     ;\n        y[0] = matrixB[0]/matrixL[0][0];\n        for(i=1;i<n;i++){\n            sum = 0;\n            for(j=0;j<i;j++){\n                sum += matrixL[i][j]*y[j];\n            }\n            y[i] = (matrixB[i]-sum)/matrixL[i][i];\n        }\n   \n        x[n-1] = y[n-1]/matrixL[n-1][n-1];\n        for(i=this.state.row-2;i>=0;i--){\n            sum = 0;\n            for(j=i+1;j<this.state.row;j++){\n                sum += matrixL[j][i]*x[j];\n            }\n            x[i] = (y[i]-sum)/matrixL[i][i];\n        }\n\n        this.setState({\n            showOutputCard: true\n        });\n    }\n    summation(L, k) {\n        var sum = 0\n        for (var i=0 ; i<parseInt(this.state.row) ; i++) {\n            for (var j=0 ; j<i-2 ; j++) {\n                sum+= L[i][j]*L[k][j]\n            }\n        }\n        return sum\n    }\n    printFraction (value) {\n        return format(value, { fraction: 'ratio' })\n    }\n\n    createMatrix(row, column) {\n        for (var i=0 ; i<row ; i++) {\n            for (var j=0 ; j<column ; j++) {\n                matrixA.push(<Input style={{\n                    width: \"18%\",\n                    height: \"50%\", \n                    backgroundColor:\"#ffffff\", \n                    marginInlineEnd: \"5%\", \n                    marginBlockEnd: \"5%\",\n                    color: \"black\",\n                    fontSize: \"18px\",\n                    fontWeight: \"bold\"\n                }} \n                id={\"a\"+(i+1)+\"\"+(j+1)} key={\"a\"+(i+1)+\"\"+(j+1)} placeholder={\"a\"+(i+1)+\"\"+(j+1)} />)  \n            }\n            matrixA.push(<br/>)\n            matrixB.push(<Input style={{\n                width: \"18%\",\n                height: \"50%\", \n                backgroundColor:\"white\", \n                marginInlineEnd: \"5%\", \n                marginBlockEnd: \"5%\",\n                color: \"black\",\n                fontSize: \"18px\",\n                fontWeight: \"bold\"\n            }} \n            id={\"b\"+(i+1)} key={\"b\"+(i+1)} placeholder={\"b\"+(i+1)} />)\n                \n            \n        }\n\n        this.setState({\n            showDimentionForm: false,\n            showMatrixForm: true,\n        })\n        \n\n    }\n    initMatrix() {\n        for(var i=0 ; i<this.state.row ; i++) {\n            A[i] = []\n            for(var j=0 ; j<this.state.column ; j++) {\n                A[i][j] = (parseFloat(document.getElementById(\"a\"+(i+1)+\"\"+(j+1)).value));\n            }\n            B.push(parseFloat(document.getElementById(\"b\"+(i+1)).value));\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n    render() {\n        return(\n            <div style={{ background: \"#FFFF\", padding: \"30px\" }}>\n                <h2 style={{color: \"black\", fontWeight: \"bold\"}}>Cholesky Decomposition</h2>\n                <div className=\"row\" style={{display:'flex'}}>\n                    <div className=\"col\">\n                        <Card\n                        bordered={true}\n                        style={{ background: \"white\", borderRadius:\"15px\", color: \"#FFFFFFFF\"}}\n                        onChange={this.handleChange}\n                        >\n                            \n                            \n                            {this.state.showDimentionForm && \n                                <div>\n                                    <h2>Row</h2><Input size=\"large\" name=\"row\" style={InputStyle}></Input>\n                                    <h2>Column</h2><Input size=\"large\" name=\"column\" style={InputStyle}></Input>\n                                    <br></br>\n                                    <br></br>\n                                    <Button id=\"dimention_button\" onClick= {\n                                        ()=>this.createMatrix(this.state.row, this.state.column)\n                                        }  \n                                        style={{background: \"#cc33ff\", color: \"white\", fontSize: \"20px\"}}>\n                                        Submit<br></br>\n                                    </Button>\n                                </div> \n                            }\n                            \n                            {this.state.showMatrixForm && \n                                <div>\n                                    <h2>Matrix [A]</h2><br/>{matrixA}\n                                    <h2>Vector [B]<br/></h2>{matrixB}\n                                    <Button \n                                        id=\"matrix_button\"  \n                                        style={{background: \"#cc33ff\", color: \"white\", fontSize: \"20px\"}}\n                                        onClick={()=>this.cholesky(this.state.row)}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            }\n                        \n                            \n                        </Card>                        \n                    </div>\n                    <div className=\"col\">\n                        {this.state.showOutputCard &&\n                            <Card\n                            title={\"Output\"}\n                            bordered={true}\n                            style={{ background: \"#ffffff\", color: \"black\" }}\n                            onChange={this.handleChange}  id=\"answerCard\">\n                                <p style={{fontSize: \"24px\", fontWeight: \"bold\"}}>{output}</p>\n                            </Card>\n                        }   \n                    </div>\n                </div>     \n            </div>\n        );\n    }\n}\nexport default Cholesky;\n\n\n\n","import React from 'react';\nimport './App.css';\nimport Home from './components/pages/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Services from './components/pages/Services';\nimport Bisection from './components/pages/Bisection Method';\nimport Falseposition from './components/pages/False_position'\nimport NewtonR from './components/pages/Newton-raphson'\nimport Onepoint from './components/pages/Onepoint'\nimport secant from './components/pages/Secant'\nimport camer from './components/pages/Cramer'\nimport gauss from './components/pages/Gauss'\nimport jordan from './components/pages/Jordan'\nimport LU from './components/pages/LU'\nimport jacobi from './components/pages/Jacobi'\nimport seidel from './components/pages/Seidel'\nimport conjo from './components/pages/Gradient'\nimport cholesky from './components/pages/Cholesky'\nimport Newton from './components/pages/Newton'\nimport lagrange from './components/pages/Lagrange'\nimport spline from './components/pages/Spline'\nimport leastRLinear from './components/pages/Linear'\nimport leastRPoly from './components/pages/Polynomial'\nimport leastRMuti from './components/pages/MultipleLinear'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        {/* <Navbar /> */}\n        <Switch>\n          <Route path='/' exact component={Home} />\n          <Route path='/Bisection' component={Bisection} />\n          <Route path='/Falseposition' component={Falseposition}/>\n          <Route path='/NewtonR' component={NewtonR}/>\n          <Route path='/Onepoint' component={Onepoint}/>\n          <Route path='/secant' component={secant}/>\n          <Route path='/camer' component={camer}/>\n          <Route path='/gauss' component={gauss}/>\n          <Route path='/jordan' component={jordan}/>\n          <Route path='/jordan' component={jordan}/>\n          <Route path='/LU' component={LU}/>\n          <Route path='/jacobi' component={jacobi}/>\n          <Route path='/seidel' component={seidel}/>\n          <Route path='/conjo' component={conjo}/>\n          <Route path='/cholesky' component={cholesky}/>\n          <Route path='/Newton' component={Newton}/>\n          <Route path='/lagrange' component={lagrange}/>\n          <Route path='/spline' component={spline}/>\n          <Route path='/leastRLinear' component={leastRLinear}/>\n          <Route path='/leastRPoly' component={leastRPoly}/>\n          <Route path='/leastRMuti' component={leastRMuti}/>  \n         </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}